{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/InfoContainer.js\";\nimport React, { Component } from 'react';\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteInfo = info => {\n      console.log(info);\n      let chosenInfo = this.state.infoData.filter(infoData => infoData !== info);\n      console.log(chosenInfo);\n      this.service.deleteInfo(chosenInfo).then(response => {\n        console.log(response);\n      });\n    };\n\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID,\n      infoTitle: this.props.infoTitle,\n      infoID: this.props.infoID\n    };\n    this.service = new AuthServices();\n  } // getInfos() {\n  //   const clientID = this.state.clientID\n  //   this.service.getLooks(clientID)\n  //     .then(allInfo => {\n  //       console.log(allInfo)\n  //         this.setState({\n  //           ...this.state,\n  //           infoData: allInfo\n  //         })\n  //       })\n  // }\n\n\n  addNewInfo(e) {\n    const newInfo = this.state.newInfoDescription;\n    const clientID = this.state.clientID;\n    const infoTitle = this.state.infoTitle;\n\n    if (e.key === 'Enter') {\n      this.service.addNewInfo(newInfo, clientID, infoTitle).then(response => {\n        console.log(response.infoData);\n        this.setState(_objectSpread({}, this.state, {\n          newInfoDescription: \"\",\n          infoData: response.infoData\n        }));\n      }).catch(error => {\n        this.setState({\n          newInfoDescription: newInfo,\n          error: true\n        });\n      });\n    }\n  }\n\n  updateNewInfoDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newInfoDescription: e.target.value\n    }));\n  }\n\n  render() {\n    // console.log(this.state)\n    return React.createElement(\"section\", {\n      className: \"info-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.infoTitle), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Info description\",\n      className: \"add-new-info\",\n      value: this.state.newInfoDescription,\n      onChange: e => this.updateNewInfoDescription(e),\n      onKeyDown: e => this.addNewInfo(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.state.infoData ? React.createElement(InfoList, {\n      infoData: this.state.infoData,\n      infoID: this.state.infoID,\n      deleteInfo: this.deleteInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/InfoContainer.js"],"names":["React","Component","InfoList","AuthServices","InfoContainer","constructor","props","deleteInfo","info","console","log","chosenInfo","state","infoData","filter","service","then","response","newInfoDescription","clientID","infoTitle","infoID","addNewInfo","e","newInfo","key","setState","catch","error","updateNewInfoDescription","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\n\n\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID,\n      infoTitle: this.props.infoTitle,\n      infoID: this.props.infoID,\n    }\n    this.service = new AuthServices();\n\n\n  }\n\n\n  // getInfos() {\n  //   const clientID = this.state.clientID\n  //   this.service.getLooks(clientID)\n  //     .then(allInfo => {\n  //       console.log(allInfo)\n  //         this.setState({\n  //           ...this.state,\n  //           infoData: allInfo\n  //         })\n  //       })\n  // }\n\n\n  addNewInfo(e) {\n    const newInfo = this.state.newInfoDescription\n    const clientID = this.state.clientID\n    const infoTitle = this.state.infoTitle\n    if (e.key === 'Enter') {\n      this.service.addNewInfo(newInfo, clientID, infoTitle)\n        .then(response => {\n          console.log(response.infoData)\n          this.setState({\n            ...this.state,\n            newInfoDescription: \"\",\n            infoData: response.infoData,\n          });\n        })\n        .catch(error => {\n          this.setState({\n            newInfoDescription: newInfo,\n            error: true\n          });\n        })\n    }\n  }\n\n\n  updateNewInfoDescription(e) {\n    this.setState({\n      ...this.state,\n      newInfoDescription: e.target.value\n    })\n  }\n\n  deleteInfo = (info) => {\n    console.log(info)\n    let chosenInfo = this.state.infoData.filter(infoData => infoData !== info)\n    console.log(chosenInfo)\n    this.service.deleteInfo(chosenInfo)\n      .then(response => {\n        console.log(response)\n      })\n  }\n\n\n  render() {\n    // console.log(this.state)\n    return (\n      <section className=\"info-collection\">\n\n        <h1>{this.state.infoTitle}</h1>\n        <input type=\"text\"\n          placeholder=\"Add a new Info description\"\n          className=\"add-new-info\"\n          value={this.state.newInfoDescription}\n          onChange={(e) => this.updateNewInfoDescription(e)}\n          onKeyDown={(e) => this.addNewInfo(e)}\n        />\n\n        {(this.state.infoData) ?\n          <InfoList\n            infoData={this.state.infoData}\n            infoID={this.state.infoID}\n            deleteInfo={this.deleteInfo} />\n          : null\n        }\n\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}