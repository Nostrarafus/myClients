{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getUser = userObj => {\n      this.setState({\n        loggedInUser: userObj\n      });\n    };\n\n    this.logout = () => {\n      this.service.logout().then(() => {\n        this.setState({\n          loggedInUser: null\n        });\n      });\n    };\n\n    this.state = {\n      loggedInUser: null\n    };\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      //utilizamos el método loggedin para cualquier momento que deseemos obtener la información del usuario quede guardada en el state de app\n      return this.service.loggedin().then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      }).catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n    }\n  }\n\n  render() {\n    this.fetchUser();\n\n    if (this.state.loggedInUser) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/profile\",\n        render: () => React.createElement(Profile, Object.assign({}, this.state.loggedInUser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: () => React.createElement(Signup, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: () => React.createElement(Login, {\n          getUser: this.getUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Profile","Signup","Login","App","constructor","getUser","userObj","setState","loggedInUser","logout","service","then","state","fetchUser","loggedin","response","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAMdC,OANc,GAMHC,OAAD,IAAa;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF;AADF,OAAd;AAGD,KAVa;;AAAA,SAYdG,MAZc,GAYL,MAAM;AACb,WAAKC,OAAL,CAAaD,MAAb,GACGE,IADH,CACQ,MAAM;AACV,aAAKJ,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD,OAHH;AAID,KAjBa;;AAEZ,SAAKI,KAAL,GAAa;AACXJ,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAcDK,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKD,KAAL,CAAWJ,YAAX,KAA4B,IAAhC,EAAsC;AACpC;AACA,aAAO,KAAKE,OAAL,CAAaI,QAAb,GACJH,IADI,CACCI,QAAQ,IAAI;AAChB,aAAKR,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAEO;AADF,SAAd;AAGD,OALI,EAMJC,KANI,CAMEC,GAAG,IAAI;AACZ,aAAKV,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAE;AADF,SAAd;AAGD,OAVI,CAAP;AAWD;AACF;;AAGDU,EAAAA,MAAM,GAAG;AACP,SAAKL,SAAL;;AACA,QAAI,KAAKD,KAAL,CAAWJ,YAAf,EAA6B;AAC3B,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAA6B,QAAA,MAAM,EAAE,MAAM,oBAAC,OAAD,oBAAa,KAAKI,KAAL,CAAWJ,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AASD,KAVD,MAUO;AACL,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,MAAM,EAAE,MAAM,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKH,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AASD;AACF;;AA7DyB;;AAgE5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: null\n    }\n  }\n  getUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    this.service.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n      })\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      //utilizamos el método loggedin para cualquier momento que deseemos obtener la información del usuario quede guardada en el state de app\n      return this.service.loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          })\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          })\n        })\n    }\n  }\n\n\n  render() {\n    this.fetchUser()\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/profile' render={() => <Profile {...this.state.loggedInUser} />} />\n\n          </Switch>\n\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/signup' render={() => <Signup getUser={this.getUser} />} />\n            <Route exact path='/login' render={() => <Login getUser={this.getUser} />} />\n          </Switch>\n\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}