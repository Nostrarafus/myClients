{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport MyContainer from './MyPoseContainer';\nimport Button from 'react-bootstrap/Button';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewLook = e => {\n      e.preventDefault();\n      const newLook = this.state.newLookDescription;\n      const clientID = this.state.clientID;\n      const lookPic = this.state.newLookFile;\n      this.service.addNewLook(newLook, clientID, lookPic).then(response => {\n        this.setState(_objectSpread({}, this.state, {\n          newLookDescription: \"\",\n          newLookFile: null,\n          looksData: response.looks\n        }));\n      }).catch(error => {\n        this.setState({\n          newLookDescription: newLook,\n          newLookFile: lookPic,\n          error: true\n        });\n      });\n    };\n\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      looksData: this.props.looksData,\n      clientID: this.props.clientID\n    };\n    this.service = new AuthServices();\n  }\n\n  updateNewLookDescription(e) {\n    let regexp = e.target.value;\n    regexp.replace(/^ +/gm, '');\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: regexp\n    }));\n  }\n\n  handlePhotoChange(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookFile: e.target.files[0]\n    }));\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"looks-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addNewLook,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look description\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"add your cool look\")), this.state.looksData ? React.createElement(MyContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(LookList, {\n      looks: this.state.looksData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })) : React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","AuthServices","LookList","MyContainer","Button","LookContainer","constructor","props","addNewLook","e","preventDefault","newLook","state","newLookDescription","clientID","lookPic","newLookFile","service","then","response","setState","looksData","looks","catch","error","updateNewLookDescription","regexp","target","value","replace","handlePhotoChange","files","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport MyContainer from './MyPoseContainer';\nimport Button from 'react-bootstrap/Button'\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      looksData: this.props.looksData,\n      clientID: this.props.clientID,\n    }\n    this.service = new AuthServices();\n  }\n\n  updateNewLookDescription(e) {\n    let regexp = e.target.value\n    regexp.replace(/^ +/gm, '')\n    this.setState({\n      ...this.state,\n      newLookDescription: regexp\n    })\n  }\n\n  addNewLook = (e) => {\n    e.preventDefault();\n    const newLook = this.state.newLookDescription\n    const clientID = this.state.clientID\n    const lookPic = this.state.newLookFile\n\n    this.service.addNewLook(newLook, clientID, lookPic)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          newLookDescription: \"\",\n          newLookFile: null,\n          looksData: response.looks\n        });\n      })\n      .catch(error => {\n        this.setState({\n          newLookDescription: newLook,\n          newLookFile: lookPic,\n          error: true\n        });\n      })\n  }\n\n\n  handlePhotoChange(e) {\n    this.setState({\n      ...this.state,\n      newLookFile: e.target.files[0]\n    })\n  }\n\n  render() {\n    return (\n      <section className=\"looks-collection\">\n        <form onSubmit={this.addNewLook} encType=\"multipart/form-data\">\n          <input type=\"text\"\n            placeholder=\"Add a new Look description\"\n            className=\"add-new-look\"\n            value={this.state.newLookDescription}\n            onChange={(e) => this.updateNewLookDescription(e)}\n          />\n\n          {/* <input type=\"file\" placeholder=\"choose your look pic\" onChange={(e) => this.handlePhotoChange(e)} /> */}\n          <Button type=\"submit\"  variant=\"outline-success\">add your cool look</Button>\n        </form>\n\n        {(this.state.looksData) ?\n          <MyContainer>\n            <LookList looks={this.state.looksData} />\n          </MyContainer>\n          : <h5>Loading...</h5>\n        }\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}