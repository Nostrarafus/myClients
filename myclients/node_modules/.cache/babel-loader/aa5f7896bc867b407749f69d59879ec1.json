{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport AuthServices from './services/Services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n\n    this.fetchUser = () => {\n      // if (this.state.loggedInUser === null) {\n      //utilizamos el método loggedin para cualquier momento que deseemos obtener la información del usuario quede guardada en el state de app\n      this.service.loggedin().then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      }).catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      }); // }\n    };\n\n    this.getTheUser = userObj => {\n      this.setState({\n        loggedInUser: userObj\n      });\n    };\n\n    this.logout = () => {\n      this.service.logout().then(() => {\n        this.setState({\n          loggedInUser: null\n        });\n      });\n    };\n\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthServices();\n  }\n\n  render() {\n    // this.fetchUser()\n    if (this.state.loggedInUser) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/profile\",\n        render: () => React.createElement(Profile, Object.assign({}, this.state.loggedInUser, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: () => React.createElement(Signup, Object.assign({}, this.state, {\n          getUser: this.getTheUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: () => React.createElement(Login, {\n          getUser: this.getTheUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Profile","Signup","Login","AuthServices","App","constructor","props","fetchUser","service","loggedin","then","response","setState","loggedInUser","catch","err","getTheUser","userObj","logout","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAQnBC,SARmB,GAQP,MAAM;AAChB;AACA;AACA,WAAKC,OAAL,CAAaC,QAAb,GACGC,IADH,CACQC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAEF;AADF,SAAd;AAGD,OALH,EAMGG,KANH,CAMSC,GAAG,IAAI;AACZ,aAAKH,QAAL,CAAc;AACZC,UAAAA,YAAY,EAAE;AADF,SAAd;AAGD,OAVH,EAHgB,CAchB;AACD,KAvBkB;;AAAA,SAyBnBG,UAzBmB,GAyBLC,OAAD,IAAa;AACxB,WAAKL,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEI;AADF,OAAd;AAGD,KA7BkB;;AAAA,SA+BnBC,MA/BmB,GA+BV,MAAM;AACb,WAAKV,OAAL,CAAaU,MAAb,GACGR,IADH,CACQ,MAAM;AACV,aAAKE,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD,OAHH;AAID,KApCkB;;AAGjB,SAAKM,KAAL,GAAa;AAAEN,MAAAA,YAAY,EAAE;AAAhB,KAAb;AACA,SAAKL,OAAL,GAAe,IAAIL,YAAJ,EAAf;AACD;;AAkCDiB,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,KAAKD,KAAL,CAAWN,YAAf,EAA6B;AAC3B,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAA6B,QAAA,MAAM,EAAE,MAAM,oBAAC,OAAD,oBAAa,KAAKM,KAAL,CAAWN,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AASD,KAVD,MAUO;AACL,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,MAAM,EAAE,MAAM,oBAAC,MAAD,oBAAY,KAAKM,KAAjB;AAAwB,UAAA,OAAO,EAAE,KAAKH,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKA,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AASD;AACF;;AA/DyB;;AAkE5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport AuthServices from './services/Services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthServices();\n  }\n\n\n  fetchUser = () => {\n    // if (this.state.loggedInUser === null) {\n    //utilizamos el método loggedin para cualquier momento que deseemos obtener la información del usuario quede guardada en el state de app\n    this.service.loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        })\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        })\n      })\n    // }\n  }\n\n  getTheUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    this.service.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n      })\n  }\n\n\n  render() {\n    // this.fetchUser()\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/profile' render={() => <Profile {...this.state.loggedInUser} />} />\n\n          </Switch>\n\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/signup' render={() => <Signup {...this.state} getUser={this.getTheUser} />} />\n            <Route exact path='/login' render={() => <Login getUser={this.getTheUser} />} />\n          </Switch>\n\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}