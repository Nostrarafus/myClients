{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: []\n    };\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {\n    this.getLooks();\n  }\n\n  getLooks() {\n    const clientID = this.props.clientData._id;\n    this.service.getLooks(clientID).then(allLooks => {\n      console.log(all); // if(allLooks !== undefined){\n      // allLooks = allLooks.data.map(look => {\n      //   return new LookElement(\n      //     look._id, look.description, look.timestamp,\n      //   )\n      // })\n      // this.setState({\n      //   ...this.state,\n      //   allLooks: allLooks\n      // })}\n    });\n  }\n\n  updateNewLookDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: e.target.value\n    }));\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription;\n    const clientID = this.props.clientData._id;\n\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID).then(createdLook => {\n        let looksClonedArray = [...this.state.allLooks];\n        createdLook = createdLook.data;\n        looksClonedArray.unshift(new LookElement(createdLook._id, createdLook.description, createdLook.timestamp));\n        this.setState(_objectSpread({}, this.state, {\n          looks: looksClonedArray,\n          newLookDescription: \"\"\n        }));\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      onKeyDown: e => this.addNewLook(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(LookList, {\n      Looks: this.state.allLooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","AuthServices","LookList","LookElement","LookContainer","constructor","props","state","newLookDescription","newLookPic","allLooks","service","componentDidMount","getLooks","clientID","clientData","_id","then","console","log","all","updateNewLookDescription","e","setState","target","value","addNewLook","newLook","key","createdLook","looksClonedArray","data","unshift","description","timestamp","looks","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,eAAe,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACnDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,EADT;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKA,SAAKC,OAAL,GAAe,IAAIV,YAAJ,EAAf;AACD;;AACDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL;AACD;;AAEDA,EAAAA,QAAQ,GAAG;AACT,UAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWS,UAAX,CAAsBC,GAAvC;AACA,SAAKL,OAAL,CAAaE,QAAb,CAAsBC,QAAtB,EACGG,IADH,CACQP,QAAQ,IAAI;AAChBQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAbH;AAcD;;AAEDC,EAAAA,wBAAwB,CAACC,CAAD,EAAI;AAC1B,SAAKC,QAAL,mBACK,KAAKhB,KADV;AAEEC,MAAAA,kBAAkB,EAAEc,CAAC,CAACE,MAAF,CAASC;AAF/B;AAID;;AAEDC,EAAAA,UAAU,CAACJ,CAAD,EAAI;AACZ,UAAMK,OAAO,GAAG,KAAKpB,KAAL,CAAWC,kBAA3B;AACA,UAAMM,QAAQ,GAAG,KAAKR,KAAL,CAAWS,UAAX,CAAsBC,GAAvC;;AACA,QAAIM,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AACrB,WAAKjB,OAAL,CAAae,UAAb,CAAwBC,OAAxB,EAAiCb,QAAjC,EACGG,IADH,CACQY,WAAW,IAAI;AACnB,YAAIC,gBAAgB,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWG,QAAf,CAAvB;AACAmB,QAAAA,WAAW,GAAGA,WAAW,CAACE,IAA1B;AACAD,QAAAA,gBAAgB,CAACE,OAAjB,CACE,IAAI7B,WAAJ,CAAgB0B,WAAW,CAACb,GAA5B,EAAiCa,WAAW,CAACI,WAA7C,EAA0DJ,WAAW,CAACK,SAAtE,CADF;AAIA,aAAKX,QAAL,mBACK,KAAKhB,KADV;AAEE4B,UAAAA,KAAK,EAAEL,gBAFT;AAGEtB,UAAAA,kBAAkB,EAAE;AAHtB;AAKD,OAbH;AAcD;AACF;;AAED4B,EAAAA,MAAM,GAAG;AACP,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWC,kBAHpB;AAIE,MAAA,QAAQ,EAAGc,CAAD,IAAO,KAAKD,wBAAL,CAA8BC,CAA9B,CAJnB;AAKE,MAAA,SAAS,EAAGA,CAAD,IAAO,KAAKI,UAAL,CAAgBJ,CAAhB,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWG,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAaD;;AA1EkD","sourcesContent":["import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: []\n    }\n    this.service = new AuthServices();\n  }\n  componentDidMount() {\n    this.getLooks()\n  }\n\n  getLooks() {\n    const clientID = this.props.clientData._id\n    this.service.getLooks(clientID)\n      .then(allLooks => {\n        console.log(all)\n        // if(allLooks !== undefined){\n        // allLooks = allLooks.data.map(look => {\n        //   return new LookElement(\n        //     look._id, look.description, look.timestamp,\n        //   )\n        // })\n        // this.setState({\n        //   ...this.state,\n        //   allLooks: allLooks\n        // })}\n      })\n  }\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription\n    const clientID = this.props.clientData._id\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID)\n        .then(createdLook => {\n          let looksClonedArray = [...this.state.allLooks]\n          createdLook = createdLook.data\n          looksClonedArray.unshift(\n            new LookElement(createdLook._id, createdLook.description, createdLook.timestamp)\n          )\n\n          this.setState({\n            ...this.state,\n            looks: looksClonedArray,\n            newLookDescription: \"\"\n          })\n        })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"task-collection\">\n        <input type=\"text\"\n          placeholder=\"Add a new Look\"\n          className=\"add-new-look\"\n          value={this.state.newLookDescription}\n          onChange={(e) => this.updateNewLookDescription(e)}\n          onKeyDown={(e) => this.addNewLook(e)} />\n\n        <LookList Looks={this.state.allLooks} />\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}