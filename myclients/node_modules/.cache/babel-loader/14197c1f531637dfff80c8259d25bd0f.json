{"ast":null,"code":"import axios from 'axios';\n\nconst errHandler = err => {\n  // console.error(err);\n  if (err.response && err.response.data) {\n    // console.error(\"API response\", err.response.data);\n    throw err.response.data.message;\n  }\n\n  throw err;\n};\n\nexport default class AuthServices {\n  constructor() {\n    this.signup = (username, password) => {\n      return this.service.post('/auth/signup', {\n        username,\n        password\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.login = (username, password) => {\n      return this.service.post('/auth/login', {\n        username,\n        password\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.loggedin = () => {\n      return this.service.get('/auth/loggedin').then(response => response.data).catch(errHandler);\n    };\n\n    this.logout = () => {\n      return this.service.get('/auth/logout').then(response => response.data).catch(errHandler);\n    };\n\n    this.addClient = clientName => {\n      return this.service.post('/addClient', {\n        clientName\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.showAllClients = () => {\n      return this.service.get('/allClients').then(response => response.data).catch(errHandler);\n    };\n\n    this.getSingleClient = clientID => {\n      return this.service.get(\"/client/\".concat(clientID)).then(response => response.data).catch(errHandler);\n    };\n\n    this.addUserPicture = file => {\n      const formData = new FormData();\n      formData.append(\"photo\", file);\n      return this.service.post('/users/Userpic', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.getUserData = () => {\n      return this.service.get('/user').then(response => response.data).catch(errHandler);\n    };\n\n    this.addNewLook = (newLook, clientID) => {\n      return this.service.post('/addLook', {\n        newLook,\n        clientID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.getLooks = clientID => {\n      return this.service.get('/allLooks', {\n        clientID\n      }).then(response => response.data, cons).catch(errHandler);\n    };\n\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000',\n      withCredentials: true\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/services/Services.js"],"names":["axios","errHandler","err","response","data","message","AuthServices","constructor","signup","username","password","service","post","then","catch","login","loggedin","get","logout","addClient","clientName","showAllClients","getSingleClient","clientID","addUserPicture","file","formData","FormData","append","headers","getUserData","addNewLook","newLook","getLooks","cons","create","baseURL","withCredentials"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst errHandler = err => {\n  // console.error(err);\n  if (err.response && err.response.data) {\n    // console.error(\"API response\", err.response.data);\n    throw err.response.data.message\n  }\n  throw err;\n}\n\n\n\nexport default class AuthServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000',\n      withCredentials: true\n    })\n\n  }\n\n\n  signup = (username, password) => {\n    return this.service.post('/auth/signup', { username, password })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  login = (username, password) => {\n    return this.service.post('/auth/login', { username, password })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  loggedin = () => {\n    return this.service.get('/auth/loggedin')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  logout = () => {\n    return this.service.get('/auth/logout')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addClient = (clientName) => {\n    return this.service.post('/addClient', { clientName })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  showAllClients = () => {\n    return this.service.get('/allClients')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n\n  getSingleClient = (clientID) => {\n    return this.service.get(`/client/${clientID}`)\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n\n  addUserPicture = (file) => {\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    return this.service.post('/users/Userpic', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  getUserData = () => {\n    return this.service.get('/user')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewLook = (newLook, clientID) => {\n    return this.service.post('/addLook', { newLook , clientID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  getLooks = (clientID) => {\n    return this.service.get('/allLooks', { clientID })\n      .then(response => response.data, cons)\n      .catch(errHandler);\n  }\n}"]},"metadata":{},"sourceType":"module"}