{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      looksData: this.props.looksData,\n      clientID: this.props.clientID\n    };\n    this.service = new AuthServices(); // console.log(this.state.looksData)\n  }\n\n  updateNewLookDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: e.target.value\n    }));\n  }\n\n  addNewLook() {\n    const newLook = this.state.newLookDescription;\n    const clientID = this.state.clientID;\n    const lookPic = this.state.newLookFile;\n    this.service.addNewLook(newLook, clientID, lookPic).then(createdLook => {\n      console.log(createdLook); // let looksClonedArray = [...this.state.allLooks]\n      // looksClonedArray.unshift(\n      //   createdLook\n      // )\n      // this.setState({\n      //   ...this.state,\n      //   looks: looksClonedArray,\n      //   newLookDescription: \"\"\n      // })\n    });\n  }\n\n  handlePhotoChange(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookFile: e.target.files[0]\n    }));\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: () => this.addNewLook(),\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look description\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      placeholder: \"add your look pic\",\n      onChange: e => this.handlePhotoChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"add your cool look\")), this.state.looksData ? React.createElement(LookList, {\n      looks: this.state.looksData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","AuthServices","LookList","LookContainer","constructor","props","state","newLookDescription","newLookFile","looksData","clientID","service","updateNewLookDescription","e","setState","target","value","addNewLook","newLook","lookPic","then","createdLook","console","log","handlePhotoChange","files","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAKA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,EADT;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAHX;AAIXC,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK;AAJV,KAAb;AAMA,SAAKC,OAAL,GAAe,IAAIV,YAAJ,EAAf,CARiB,CASlB;AACA;;AAEDW,EAAAA,wBAAwB,CAACC,CAAD,EAAI;AAC1B,SAAKC,QAAL,mBACK,KAAKR,KADV;AAEEC,MAAAA,kBAAkB,EAAEM,CAAC,CAACE,MAAF,CAASC;AAF/B;AAID;;AAEDC,EAAAA,UAAU,GAAG;AACX,UAAMC,OAAO,GAAG,KAAKZ,KAAL,CAAWC,kBAA3B;AACA,UAAMG,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA5B;AACA,UAAMS,OAAO,GAAG,KAAKb,KAAL,CAAWE,WAA3B;AAEA,SAAKG,OAAL,CAAaM,UAAb,CAAwBC,OAAxB,EAAiCR,QAAjC,EAA2CS,OAA3C,EACGC,IADH,CACQC,WAAW,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ,EADmB,CAGnB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD,KAdH;AAeD;;AAKDG,EAAAA,iBAAiB,CAACX,CAAD,EAAI;AACnB,SAAKC,QAAL,mBACK,KAAKR,KADV;AAEEE,MAAAA,WAAW,EAAEK,CAAC,CAACE,MAAF,CAASU,KAAT,CAAe,CAAf;AAFf;AAID;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,MAAM,KAAKT,UAAL,EAAtB;AAAyC,MAAA,OAAO,EAAC,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,WAAW,EAAC,4BADd;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,kBAHpB;AAIE,MAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKD,wBAAL,CAA8BC,CAA9B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,mBAA/B;AAAmD,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKW,iBAAL,CAAuBX,CAAvB,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,OAQoG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARpG,EAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF,CADF,EAcI,KAAKP,KAAL,CAAWG,SAAZ,GACC,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,IAhBN,CADF;AAsBD;;AA5EkD","sourcesContent":["import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\n\n\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      looksData: this.props.looksData,\n      clientID: this.props.clientID,\n    }\n    this.service = new AuthServices();\n   // console.log(this.state.looksData)\n  }\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook() {\n    const newLook = this.state.newLookDescription\n    const clientID = this.state.clientID\n    const lookPic = this.state.newLookFile\n\n    this.service.addNewLook(newLook, clientID, lookPic)\n      .then(createdLook => {\n        console.log(createdLook)\n\n        // let looksClonedArray = [...this.state.allLooks]\n        // looksClonedArray.unshift(\n        //   createdLook\n        // )\n\n        // this.setState({\n        //   ...this.state,\n        //   looks: looksClonedArray,\n        //   newLookDescription: \"\"\n        // })\n      })\n  }\n\n\n\n\n  handlePhotoChange(e) {\n    this.setState({\n      ...this.state,\n      newLookFile: e.target.files[0]\n    })\n  }\n\n  render() {\n\n    return (\n      <section className=\"task-collection\">\n        <form onSubmit={() => this.addNewLook()} encType=\"multipart/form-data\">\n          <input type=\"text\"\n            placeholder=\"Add a new Look description\"\n            className=\"add-new-look\"\n            value={this.state.newLookDescription}\n            onChange={(e) => this.updateNewLookDescription(e)}\n          />\n\n          <input type=\"file\" placeholder=\"add your look pic\" onChange={(e) => this.handlePhotoChange(e)} /> <br />\n\n          <button type=\"submit\">add your cool look</button>\n        </form>\n\n        {(this.state.looksData) ?\n          <LookList looks={this.state.looksData} />\n          : null\n        }\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}