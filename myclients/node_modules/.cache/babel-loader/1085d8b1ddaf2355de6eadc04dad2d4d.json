{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      allLooks: [],\n      clientData: this.props.clientData\n    };\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {\n    this.getLooks();\n  }\n\n  getLooks() {\n    const clientID = this.state.clientData._id;\n    this.service.getLooks(clientID).then(allLooks => {\n      console.log(allLooks.looks);\n\n      if (allLooks !== null) {\n        allLooks = allLooks.looks.map(look => {\n          return new LookElement(look._id, look.lookDescription, look.timestamp);\n        });\n        this.setState(_objectSpread({}, this.state, {\n          allLooks: allLooks\n        }));\n      }\n    });\n  }\n\n  updateNewLookDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: e.target.value\n    }));\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription;\n    const clientID = this.state.clientData._id;\n\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID).then(createdLook => {\n        console.log(createdLook);\n        let looksClonedArray = [...this.state.allLooks];\n        looksClonedArray.unshift(new LookElement(createdLook._id, createdLook.description, createdLook.timestamp));\n        this.setState(_objectSpread({}, this.state, {\n          looks: looksClonedArray,\n          newLookDescription: \"\"\n        }));\n      });\n    }\n  }\n\n  handlePhotoSubmit(e) {\n    e.preventDefault();\n    this.service.addLookPicture(this.state.newLookFile);\n  }\n\n  handlePhotoChange(e) {\n    console.log(\"archivos seleccionado\");\n    console.log(e.target.files[0]);\n    this.setState(_objectSpread({}, this.state, {\n      file: e.target.files[0]\n    }));\n  }\n\n  render() {\n    // console.log(this.props.clientData)\n    // console.log(this.state.clientData)\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleLookSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look description\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      onKeyDown: e => this.addNewLook(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.handlePhotoChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Take your look pic\")), React.createElement(LookList, {\n      Looks: this.state.allLooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","AuthServices","LookList","LookElement","LookContainer","constructor","props","state","newLookDescription","newLookFile","allLooks","clientData","service","componentDidMount","getLooks","clientID","_id","then","console","log","looks","map","look","lookDescription","timestamp","setState","updateNewLookDescription","e","target","value","addNewLook","newLook","key","createdLook","looksClonedArray","unshift","description","handlePhotoSubmit","preventDefault","addLookPicture","handlePhotoChange","files","file","render","handleLookSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      allLooks: [],\n      clientData: this.props.clientData\n    }\n    this.service = new AuthServices();\n  }\n  componentDidMount() {\n    this.getLooks()\n  }\n\n\n  getLooks() {\n    const clientID = this.state.clientData._id\n    this.service.getLooks(clientID)\n      .then(allLooks => {\n        console.log(allLooks.looks)\n        if (allLooks !== null) {\n          allLooks = allLooks.looks.map(look => {\n            return new LookElement(\n              look._id, look.lookDescription, look.timestamp,\n            )\n          })\n          this.setState({\n            ...this.state,\n            allLooks: allLooks\n          })\n        }\n      })\n  }\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription\n    const clientID = this.state.clientData._id\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID)\n        .then(createdLook => {\n          console.log(createdLook)\n          let looksClonedArray = [...this.state.allLooks]\n          looksClonedArray.unshift(\n            new LookElement(createdLook._id, createdLook.description, createdLook.timestamp)\n          )\n\n          this.setState({\n            ...this.state,\n            looks: looksClonedArray,\n            newLookDescription: \"\"\n          })\n        })\n    }\n  }\n\n  handlePhotoSubmit(e) {\n    e.preventDefault()\n    this.service.addLookPicture(this.state.newLookFile)\n  }\n\n\n  handlePhotoChange(e) {\n    console.log(\"archivos seleccionado\")\n    console.log(e.target.files[0])\n\n    this.setState({\n      ...this.state,\n      file: e.target.files[0]\n    })\n  }\n\n  render() {\n    // console.log(this.props.clientData)\n    // console.log(this.state.clientData)\n    return (\n      <section className=\"task-collection\">\n        <form onSubmit={(e) => this.handleLookSubmit(e)}>\n          <input type=\"text\"\n            placeholder=\"Add a new Look description\"\n            className=\"add-new-look\"\n            value={this.state.newLookDescription}\n            onChange={(e) => this.updateNewLookDescription(e)}\n            onKeyDown={(e) => this.addNewLook(e)} />\n\n          <input type=\"file\" onChange={(e) => this.handlePhotoChange(e)} /> <br />\n\n          <button type=\"submit\">Take your look pic</button>\n        </form>\n\n        <LookList Looks={this.state.allLooks} />\n\n\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}