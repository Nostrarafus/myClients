{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/InfoContainer.js\";\nimport React, { Component } from 'react';\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID\n    };\n    this.service = new AuthServices();\n  }\n\n  getInfos() {\n    const clientID = this.state.clientID;\n    this.service.getLooks(clientID).then(allInfo => {\n      console.log(allInfo);\n      this.setState(_objectSpread({}, this.state, {\n        infoData: allInfo\n      }));\n    });\n  }\n\n  addNewInfo(e) {\n    if (e.key === 'Enter') {//  this.service.addInfo()\n      //     .then(createdInfo=> {\n      //       let infoClonedArray = [...this.state.tasks]\n      //       createdInfo = createdTask.data\n      //       infoClonedArray.unshift(\n      //         new TaskElement(createdTask._id, createdTask.description, createdTask.timestamp, createdTask.favourited, createdTask.done)\n      //       )\n      //       this.setState({\n      //         ...this.state,\n      //         allInfo: infoClonedArray,\n      //         newInfoDescription: \"\"\n      //       })\n      //     })\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"info-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.info), React.createElement(\"form\", {\n      onSubmit: () => this.addNewInfo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Info description\",\n      className: \"add-new-info\",\n      value: this.state.newInfoDescription,\n      onChange: e => this.updateNewInfoDescription(e),\n      onKeyDown: e => this.addNewInfo(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(InfoList, {\n      infos: this.state.allInfos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/InfoContainer.js"],"names":["React","Component","InfoList","AuthServices","InfoContainer","constructor","props","state","newInfoDescription","infoData","clientID","service","getInfos","getLooks","then","allInfo","console","log","setState","addNewInfo","e","key","render","info","updateNewInfoDescription","allInfos"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAGA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE,EADT;AAEXC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFV;AAGXC,MAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI;AAHV,KAAb;AAKA,SAAKC,OAAL,GAAe,IAAIR,YAAJ,EAAf;AACD;;AAGDS,EAAAA,QAAQ,GAAG;AACT,UAAMF,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA5B;AACA,SAAKC,OAAL,CAAaE,QAAb,CAAsBH,QAAtB,EACGI,IADH,CACQC,OAAO,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACE,WAAKG,QAAL,mBACK,KAAKX,KADV;AAEEE,QAAAA,QAAQ,EAAEM;AAFZ;AAID,KAPL;AAQD;;AAEDI,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZ,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB,CACrB;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAED;AACF;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWgB,IAAhB,CADF,EAEE;AAAM,MAAA,QAAQ,EAAE,MAAM,KAAKJ,UAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,WAAW,EAAC,4BADd;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,kBAHpB;AAIE,MAAA,QAAQ,EAAGY,CAAD,IAAO,KAAKI,wBAAL,CAA8BJ,CAA9B,CAJnB;AAKE,MAAA,SAAS,EAAGA,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAaE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWkB,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAmBD;;AAnEkD","sourcesContent":["import React, { Component } from 'react'\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\n\n\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID,\n    }\n    this.service = new AuthServices();\n  }\n\n\n  getInfos() {\n    const clientID = this.state.clientID\n    this.service.getLooks(clientID)\n      .then(allInfo => {\n        console.log(allInfo)\n          this.setState({\n            ...this.state,\n            infoData: allInfo\n          })\n        })\n  }\n\n  addNewInfo(e) {\n    if (e.key === 'Enter') {\n      //  this.service.addInfo()\n      //     .then(createdInfo=> {\n      //       let infoClonedArray = [...this.state.tasks]\n\n      //       createdInfo = createdTask.data\n\n      //       infoClonedArray.unshift(\n      //         new TaskElement(createdTask._id, createdTask.description, createdTask.timestamp, createdTask.favourited, createdTask.done)\n      //       )\n\n      //       this.setState({\n      //         ...this.state,\n      //         allInfo: infoClonedArray,\n      //         newInfoDescription: \"\"\n      //       })\n      //     })\n\n    }\n  }\n\n\n  render() {\n    return (\n      <section className=\"info-collection\">\n        <h1>{this.state.info}</h1>\n        <form onSubmit={() => this.addNewInfo()}>\n          <input type=\"text\"\n            placeholder=\"Add a new Info description\"\n            className=\"add-new-info\"\n            value={this.state.newInfoDescription}\n            onChange={(e) => this.updateNewInfoDescription(e)}\n            onKeyDown={(e) => this.addNewInfo(e)}\n          />\n\n        </form>\n\n        <InfoList infos={this.state.allInfos} />\n\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}