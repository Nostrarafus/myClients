{"ast":null,"code":"import axios from 'axios';\n\nconst errHandler = err => {\n  console.error(err);\n\n  if (err.response && err.response.data) {\n    console.error(\"API response\", err.response.data);\n    throw err.response.data.message;\n  }\n\n  throw err;\n};\n\nexport default class AuthServices {\n  constructor() {\n    this.signup = (username, password) => {\n      return this.service.post('/auth/signup', {\n        username,\n        password\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.login = (username, password) => {\n      return this.service.post('/auth/login', {\n        username,\n        password\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.loggedin = () => {\n      return this.service.get('/auth/loggedin').then(response => response.data).catch(errHandler);\n    };\n\n    this.logout = () => {\n      return this.service.get('/auth/logout').then(response => response.data).catch(errHandler);\n    };\n\n    this.addClient = clientName => {\n      return this.service.post('/addClient', {\n        clientName\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.showAllClients = () => {\n      return this.service.get('/allClients').then(response => response.data).catch(errHandler);\n    };\n\n    this.addUserPicture = file => {\n      const formData = new FormData();\n      formData.append(\"photo\", file);\n      return this.service.post('/users/Userpic', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.getUserData = () => {\n      return this.service.get('/user').then(response => response.data).catch(errHandler);\n    };\n\n    this.getSingleClient = clientID => {\n      return this.service.post(\"/clientData\", {\n        clientID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.addNewLook = (newLook, clientID, file) => {\n      console.log(newLook, clientID);\n      const formData = new FormData();\n      formData.append(\"photo\", file);\n      formData.append(\"newLook\", newLook);\n      return this.service.post(\"/client/\".concat(clientID, \"/addNewLook\"), formData).then(response => response.data).catch(errHandler);\n    };\n\n    this.addNewLookFromCamera = (newLook, clientID, lookPicCam) => {\n      console.log(lookPicCam);\n      formData.append(\"photo\", file);\n      return this.service.post(\"/client/\".concat(clientID, \"/addNewLookFromCamera\"), {\n        newLook,\n        lookPicCam\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.addNewInfo = (newInfo, clientID, infoTitle) => {\n      return this.service.post(\"/client/\".concat(clientID, \"/addNewInfo\"), {\n        newInfo,\n        infoTitle\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.addNewInfoBox = (infoTitle, clientID) => {\n      return this.service.post(\"/addNewInfoBox\", {\n        infoTitle,\n        clientID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.deleteInfo = (info, infoID) => {\n      console.log(info);\n      return this.service.post(\"/deleteInfo\", {\n        info,\n        infoID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.addNewTask = (newTask, clientID) => {\n      return this.service.post(\"/addTask\", {\n        newTask,\n        clientID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.deleteTaskInfo = (taskID, clientID) => {\n      return this.service.post(\"/deleteTaskInfo\", {\n        taskID,\n        clientID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.deleteLook = (lookID, clientID) => {\n      return this.service.post(\"/deleteLook\", {\n        lookID,\n        clientID\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.toggleTask = (taskID, clientID, done, fav) => {\n      return this.service.post(\"/toggle\", {\n        taskID,\n        clientID,\n        done,\n        fav\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.addClientPicture = (file, clientID, clientName) => {\n      const formData = new FormData();\n      formData.append(\"photo\", file);\n      formData.append(\"clientName\", clientName);\n      return this.service.post(\"/client/\".concat(clientID, \"/addClientPic\"), formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => response.data).catch(errHandler);\n    };\n\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_URL,\n      withCredentials: true\n    });\n  }\n\n} // getLooks = (clientID) => {\n//   return this.service.get(`/client/${clientID}/allLooks`)\n//     .then(response => response.data)\n//     .catch(errHandler);\n// }","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/services/Services.js"],"names":["axios","errHandler","err","console","error","response","data","message","AuthServices","constructor","signup","username","password","service","post","then","catch","login","loggedin","get","logout","addClient","clientName","showAllClients","addUserPicture","file","formData","FormData","append","headers","getUserData","getSingleClient","clientID","addNewLook","newLook","log","addNewLookFromCamera","lookPicCam","addNewInfo","newInfo","infoTitle","addNewInfoBox","deleteInfo","info","infoID","addNewTask","newTask","deleteTaskInfo","taskID","deleteLook","lookID","toggleTask","done","fav","addClientPicture","create","baseURL","process","env","REACT_APP_URL","withCredentials"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst errHandler = err => {\n  console.error(err);\n  if (err.response && err.response.data) {\n    console.error(\"API response\", err.response.data);\n    throw err.response.data.message\n  }\n  throw err;\n}\n\n\nexport default class AuthServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_URL,\n      withCredentials: true\n    })\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/auth/signup', { username, password })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  login = (username, password) => {\n    return this.service.post('/auth/login', { username, password })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  loggedin = () => {\n    return this.service.get('/auth/loggedin')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  logout = () => {\n    return this.service.get('/auth/logout')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addClient = (clientName) => {\n    return this.service.post('/addClient', { clientName })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  showAllClients = () => {\n    return this.service.get('/allClients')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addUserPicture = (file) => {\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    return this.service.post('/users/Userpic', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  getUserData = () => {\n    return this.service.get('/user')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  getSingleClient = (clientID) => {\n    return this.service.post(`/clientData`, { clientID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewLook = (newLook, clientID, file) => {\n    console.log(newLook, clientID)\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    formData.append(\"newLook\", newLook)\n    return this.service.post(`/client/${clientID}/addNewLook`, formData)\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewLookFromCamera = (newLook, clientID, lookPicCam) => {\n    console.log(lookPicCam)\n    formData.append(\"photo\", file)\n    return this.service.post(`/client/${clientID}/addNewLookFromCamera`, { newLook, lookPicCam })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewInfo = (newInfo, clientID, infoTitle) => {\n    return this.service.post(`/client/${clientID}/addNewInfo`, { newInfo, infoTitle })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewInfoBox = (infoTitle, clientID) => {\n    return this.service.post(`/addNewInfoBox`, { infoTitle, clientID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  deleteInfo = (info, infoID) => {\n    console.log(info)\n    return this.service.post(`/deleteInfo`, { info, infoID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewTask = (newTask, clientID) => {\n    return this.service.post(`/addTask`, { newTask, clientID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  deleteTaskInfo = (taskID, clientID) => {\n    return this.service.post(`/deleteTaskInfo`, { taskID, clientID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n  deleteLook = (lookID,clientID) => {\n    return this.service.post(`/deleteLook`, { lookID, clientID })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  toggleTask = (taskID, clientID, done, fav) => {\n    return this.service.post(`/toggle`, { taskID, clientID, done, fav })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addClientPicture = (file, clientID, clientName) => {\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    formData.append(\"clientName\", clientName)\n    return this.service.post(`/client/${clientID}/addClientPic`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n}\n\n\n  // getLooks = (clientID) => {\n  //   return this.service.get(`/client/${clientID}/allLooks`)\n  //     .then(response => response.data)\n  //     .catch(errHandler);\n  // }"]},"metadata":{},"sourceType":"module"}