{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/InfoContainer.js\";\nimport React, { Component } from 'react';\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID,\n      infoTitle: this.props.infoTitle,\n      infoID: this.props.infoID\n    };\n    this.service = new AuthServices();\n  } // getInfos() {\n  //   const clientID = this.state.clientID\n  //   this.service.getLooks(clientID)\n  //     .then(allInfo => {\n  //       console.log(allInfo)\n  //         this.setState({\n  //           ...this.state,\n  //           infoData: allInfo\n  //         })\n  //       })\n  // }\n\n\n  addNewInfo(e) {\n    const newInfo = this.state.newInfoDescription;\n    const clientID = this.state.clientID;\n    const infoTitle = this.state.infoTitle;\n\n    if (e.key === 'Enter') {\n      this.service.addNewInfo(newInfo, clientID, infoTitle).then(response => {\n        console.log(response.infoData);\n        this.setState(_objectSpread({}, this.state, {\n          newInfoDescription: \"\",\n          infoData: response.infoData\n        }));\n      }).catch(error => {\n        this.setState({\n          newInfoDescription: newInfo,\n          error: true\n        });\n      });\n    }\n  }\n\n  updateNewInfoDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newInfoDescription: e.target.value\n    }));\n  }\n\n  deleteInfo() {}\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"section\", {\n      className: \"info-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.infoTitle), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Info description\",\n      className: \"add-new-info\",\n      value: this.state.newInfoDescription,\n      onChange: e => this.updateNewInfoDescription(e),\n      onKeyDown: e => this.addNewInfo(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.state.infoData ? React.createElement(InfoList, {\n      infoData: this.state.infoData,\n      infoID: this.state.infoID,\n      delete: info => this.delete(info),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/InfoContainer.js"],"names":["React","Component","InfoList","AuthServices","InfoContainer","constructor","props","state","newInfoDescription","infoData","clientID","infoTitle","infoID","service","addNewInfo","e","newInfo","key","then","response","console","log","setState","catch","error","updateNewInfoDescription","target","value","deleteInfo","render","info","delete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\n\n\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID,\n      infoTitle: this.props.infoTitle,\n      infoID: this.props.infoID,\n    }\n    this.service = new AuthServices();\n\n\n  }\n\n\n  // getInfos() {\n  //   const clientID = this.state.clientID\n  //   this.service.getLooks(clientID)\n  //     .then(allInfo => {\n  //       console.log(allInfo)\n  //         this.setState({\n  //           ...this.state,\n  //           infoData: allInfo\n  //         })\n  //       })\n  // }\n\n\n  addNewInfo(e) {\n    const newInfo = this.state.newInfoDescription\n    const clientID = this.state.clientID\n    const infoTitle = this.state.infoTitle\n    if (e.key === 'Enter') {\n      this.service.addNewInfo(newInfo, clientID, infoTitle)\n        .then(response => {\n          console.log(response.infoData)\n          this.setState({\n            ...this.state,\n            newInfoDescription: \"\",\n            infoData: response.infoData,\n          });\n        })\n        .catch(error => {\n          this.setState({\n            newInfoDescription: newInfo,\n            error: true\n          });\n        })\n    }\n  }\n\n\n  updateNewInfoDescription(e) {\n    this.setState({\n      ...this.state,\n      newInfoDescription: e.target.value\n    })\n  }\n\n  deleteInfo() { }\n  render() {\n    console.log(this.state)\n    return (\n      <section className=\"info-collection\">\n\n        <h1>{this.state.infoTitle}</h1>\n        <input type=\"text\"\n          placeholder=\"Add a new Info description\"\n          className=\"add-new-info\"\n          value={this.state.newInfoDescription}\n          onChange={(e) => this.updateNewInfoDescription(e)}\n          onKeyDown={(e) => this.addNewInfo(e)}\n        />\n\n        {(this.state.infoData) ?\n          <InfoList infoData={this.state.infoData} infoID={this.state.infoID} delete={(info) => this.delete(info)} />\n          : null\n        }\n\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}