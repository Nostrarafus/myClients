{"ast":null,"code":"import axios from 'axios';\nexport default class AuthServices {\n  constructor() {\n    this.signup = (username, password) => {\n      return this.service.post('/signup', {\n        username,\n        password\n      }).then(response => response.data);\n    };\n\n    this.login = (username, password) => {\n      return this.service.post('/login', {\n        username,\n        password\n      }).then(response => response.data);\n    };\n\n    this.loggedIn = (username, password) => {};\n\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000/auth',\n      withCredentials: true\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/services/Services.js"],"names":["axios","AuthServices","constructor","signup","username","password","service","post","then","response","data","login","loggedIn","create","baseURL","withCredentials"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,GAAG;AAAA,SAOdC,MAPc,GAOL,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/B,aAAO,KAAKC,OAAL,CAAaC,IAAb,CAAkB,SAAlB,EAA6B;AAACH,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAA7B,EACNG,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAED,KAVa;;AAAA,SAYdC,KAZc,GAYN,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC9B,aAAO,KAAKC,OAAL,CAAaC,IAAb,CAAkB,QAAlB,EAA4B;AAACH,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAA5B,EACNG,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAED,KAfa;;AAAA,SAkBdE,QAlBc,GAkBH,CAACR,QAAD,EAAWC,QAAX,KAAyB,CAEnC,CApBa;;AACZ,SAAKC,OAAL,GAAeN,KAAK,CAACa,MAAN,CAAa;AAC1BC,MAAAA,OAAO,EAAE,4BADiB;AAE1BC,MAAAA,eAAe,EAAE;AAFS,KAAb,CAAf;AAID;;AAN+B","sourcesContent":["import axios from 'axios'\n\nexport default class AuthServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000/auth',\n      withCredentials: true\n    })\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n\n  loggedIn = (username, password)  => {\n\n  }\n}"]},"metadata":{},"sourceType":"module"}