{"ast":null,"code":"import axios from 'axios';\nexport default class AuthServices {\n  constructor() {\n    this.addClient = clientName => {\n      return this.service.post('/addClient', {\n        clientName\n      }).then(response => response.data);\n    };\n\n    this.showAllClients = () => {\n      return this.service.get('/allClients').then(response => response.data);\n    };\n\n    this.signup = (username, password) => {\n      return this.service.post('/auth/signup', {\n        username,\n        password\n      }).then(response => response.data);\n    };\n\n    this.login = (username, password) => {\n      return this.service.post('/auth/login', {\n        username,\n        password\n      }).then(response => response.data);\n    };\n\n    this.loggedin = () => {\n      return this.service.get('/auth/loggedin').then(response => response.data);\n    };\n\n    this.logout = () => {\n      return this.service.get('/auth/logout').then(response => response.data);\n    };\n\n    this.getsingleClient = id => {\n      return this.service.get(\"/client/\".concat(clientID)).then(response => response.data);\n    };\n\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000',\n      withCredentials: true\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/services/Services.js"],"names":["axios","AuthServices","constructor","addClient","clientName","service","post","then","response","data","showAllClients","get","signup","username","password","login","loggedin","logout","getsingleClient","id","clientID","create","baseURL","withCredentials"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,GAAG;AAAA,SAQdC,SARc,GAQDC,UAAD,IAAgB;AAC1B,aAAO,KAAKC,OAAL,CAAaC,IAAb,CAAkB,YAAlB,EAAgC;AAAEF,QAAAA;AAAF,OAAhC,EACJG,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IADtB,CAAP;AAED,KAXa;;AAAA,SAadC,cAbc,GAaG,MAAM;AACrB,aAAO,KAAKL,OAAL,CAAaM,GAAb,CAAiB,aAAjB,EACNJ,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAED,KAhBa;;AAAA,SAkBdG,MAlBc,GAkBL,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/B,aAAO,KAAKT,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC;AAAEO,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAlC,EACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IADtB,CAAP;AAED,KArBa;;AAAA,SAuBdM,KAvBc,GAuBN,CAACF,QAAD,EAAWC,QAAX,KAAwB;AAC9B,aAAO,KAAKT,OAAL,CAAaC,IAAb,CAAkB,aAAlB,EAAiC;AAAEO,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAjC,EACJP,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IADtB,CAAP;AAED,KA1Ba;;AAAA,SA4BdO,QA5Bc,GA4BH,MAAM;AACf,aAAO,KAAKX,OAAL,CAAaM,GAAb,CAAiB,gBAAjB,EACJJ,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IADtB,CAAP;AAED,KA/Ba;;AAAA,SAiCdQ,MAjCc,GAiCL,MAAM;AACb,aAAO,KAAKZ,OAAL,CAAaM,GAAb,CAAiB,cAAjB,EACJJ,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IADtB,CAAP;AAED,KApCa;;AAAA,SAsCdS,eAtCc,GAsCKC,EAAD,IAAQ;AACxB,aAAO,KAAKd,OAAL,CAAaM,GAAb,mBAA4BS,QAA5B,GACNb,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAED,KAzCa;;AACZ,SAAKJ,OAAL,GAAeL,KAAK,CAACqB,MAAN,CAAa;AAC1BC,MAAAA,OAAO,EAAE,uBADiB;AAE1BC,MAAAA,eAAe,EAAE;AAFS,KAAb,CAAf;AAKD;;AAP+B","sourcesContent":["import axios from 'axios'\n\nexport default class AuthServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000',\n      withCredentials: true\n    })\n\n  }\n\n  addClient = (clientName) => {\n    return this.service.post('/addClient', { clientName })\n      .then(response => response.data)\n  }\n\n  showAllClients = () => {\n    return this.service.get('/allClients')\n    .then(response => response.data)\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/auth/signup', { username, password })\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/auth/login', { username, password })\n      .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/auth/loggedin')\n      .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/auth/logout')\n      .then(response => response.data)\n  }\n\n  getsingleClient = (id) => {\n    return this.service.get(`/client/${clientID}`)\n    .then(response => response.data)\n  }\n\n}"]},"metadata":{},"sourceType":"module"}