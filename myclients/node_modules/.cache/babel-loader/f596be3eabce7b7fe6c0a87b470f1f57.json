{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientData: this.props,\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: []\n    };\n  } // componentDidMount(){\n  //   this.setState({\n  //     ...this.state,\n  //    clientData: this.props\n  //   })\n  // }\n\n\n  updateNewLookDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: e.target.value\n    }));\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription;\n\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID).then(createdLook => {\n        let looksClonedArray = [...this.state.allLooks];\n        createdLook = createdLook.data;\n        looksClonedArray.unshift(new LookElement(createdLook._id, createdLook.description, createdLook.timestamp));\n        this.setState(_objectSpread({}, this.state, {\n          looks: looksClonedArray,\n          newLookDescription: \"\"\n        }));\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      onKeyDown: e => this.addNewLook(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(LookList, {\n      Looks: this.state.allLooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","LookList","LookElement","LookContainer","constructor","props","state","clientData","newLookDescription","newLookPic","allLooks","updateNewLookDescription","e","setState","target","value","addNewLook","newLook","key","service","clientID","then","createdLook","looksClonedArray","data","unshift","_id","description","timestamp","looks","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,eAAe,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAG,KAAKF,KADP;AAEXG,MAAAA,kBAAkB,EAAE,EAFT;AAGXC,MAAAA,UAAU,EAAE,EAHD;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAOD,GAVkD,CAYrD;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,wBAAwB,CAACC,CAAD,EAAI;AAC1B,SAAKC,QAAL,mBACK,KAAKP,KADV;AAEEE,MAAAA,kBAAkB,EAAEI,CAAC,CAACE,MAAF,CAASC;AAF/B;AAID;;AAEDC,EAAAA,UAAU,CAACJ,CAAD,EAAI;AACZ,UAAMK,OAAO,GAAG,KAAKX,KAAL,CAAWE,kBAA3B;;AACA,QAAII,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AACrB,WAAKC,OAAL,CAAaH,UAAb,CAAwBC,OAAxB,EAAiCG,QAAjC,EACGC,IADH,CACQC,WAAW,IAAI;AACnB,YAAIC,gBAAgB,GAAG,CAAC,GAAG,KAAKjB,KAAL,CAAWI,QAAf,CAAvB;AACCY,QAAAA,WAAW,GAAGA,WAAW,CAACE,IAA1B;AAEDD,QAAAA,gBAAgB,CAACE,OAAjB,CACE,IAAIvB,WAAJ,CAAgBoB,WAAW,CAACI,GAA5B,EAAiCJ,WAAW,CAACK,WAA7C,EAA0DL,WAAW,CAACM,SAAtE,CADF;AAIA,aAAKf,QAAL,mBACK,KAAKP,KADV;AAEEuB,UAAAA,KAAK,EAAEN,gBAFT;AAGEf,UAAAA,kBAAkB,EAAE;AAHtB;AAKD,OAdH;AAeD;AACF;;AAEDsB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AACA,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AACE,MAAA,WAAW,EAAC,gBADd;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWE,kBAHpB;AAIE,MAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKD,wBAAL,CAA8BC,CAA9B,CAJnB;AAKE,MAAA,SAAS,EAAGA,CAAD,IAAO,KAAKI,UAAL,CAAgBJ,CAAhB,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAaD;;AA9DkD","sourcesContent":["import React, { Component } from 'react'\nimport LookList from './LookList';\nimport LookElement from './LookElement';\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      clientData : this.props,\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: []\n    }\n\n  }\n\n// componentDidMount(){\n//   this.setState({\n//     ...this.state,\n//    clientData: this.props\n//   })\n// }\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID)\n        .then(createdLook => {\n          let looksClonedArray = [...this.state.allLooks]\n           createdLook = createdLook.data\n\n          looksClonedArray.unshift(\n            new LookElement(createdLook._id, createdLook.description, createdLook.timestamp)\n          )\n\n          this.setState({\n            ...this.state,\n            looks: looksClonedArray,\n            newLookDescription: \"\"\n          })\n        })\n    }\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <section className=\"task-collection\">\n        <input type=\"text\"\n          placeholder=\"Add a new Look\"\n          className=\"add-new-look\"\n          value={this.state.newLookDescription}\n          onChange={(e) => this.updateNewLookDescription(e)}\n          onKeyDown={(e) => this.addNewLook(e)} />\n\n        <LookList Looks={this.state.allLooks} />\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}