{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: []\n    };\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {}\n\n  getLooks() {\n    this.service.getLooks().then(allTasks => {\n      allTasks = allTasks.data.map(task => {\n        return new TaskElement(task._id, task.description, task.timestamp, task.favourited, task.done);\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks: allTasks\n      }));\n    });\n  }\n\n  updateNewLookDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: e.target.value\n    }));\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription;\n    const clientID = this.props.clientData._id;\n\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID).then(createdLook => {\n        let looksClonedArray = [...this.state.allLooks];\n        createdLook = createdLook.data;\n        looksClonedArray.unshift(new LookElement(createdLook._id, createdLook.description, createdLook.timestamp));\n        this.setState(_objectSpread({}, this.state, {\n          looks: looksClonedArray,\n          newLookDescription: \"\"\n        }));\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      onKeyDown: e => this.addNewLook(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(LookList, {\n      Looks: this.state.allLooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","AuthServices","LookList","LookElement","LookContainer","constructor","props","state","newLookDescription","newLookPic","allLooks","service","componentDidMount","getLooks","then","allTasks","data","map","task","TaskElement","_id","description","timestamp","favourited","done","setState","tasks","updateNewLookDescription","e","target","value","addNewLook","newLook","clientID","clientData","key","createdLook","looksClonedArray","unshift","looks","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: []\n    }\n    this.service = new AuthServices();\n  }\n  componentDidMount() {\n  \n}\n \ngetLooks(){\n  this.service.getLooks()\n    \n  .then(allTasks => {\n      allTasks = allTasks.data.map(task => {\n          return new TaskElement(\n              task._id, task.description, task.timestamp, task.favourited, task.done\n          )\n      })\n\n      this.setState({\n          ...this.state,\n          tasks: allTasks\n      })\n  })\n}\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription\n    const clientID = this.props.clientData._id\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID)\n        .then(createdLook => {\n          let looksClonedArray = [...this.state.allLooks]\n          createdLook = createdLook.data\n          looksClonedArray.unshift(\n            new LookElement(createdLook._id, createdLook.description, createdLook.timestamp)\n          )\n\n          this.setState({\n            ...this.state,\n            looks: looksClonedArray,\n            newLookDescription: \"\"\n          })\n        })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"task-collection\">\n        <input type=\"text\"\n          placeholder=\"Add a new Look\"\n          className=\"add-new-look\"\n          value={this.state.newLookDescription}\n          onChange={(e) => this.updateNewLookDescription(e)}\n          onKeyDown={(e) => this.addNewLook(e)} />\n\n        <LookList Looks={this.state.allLooks} />\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}