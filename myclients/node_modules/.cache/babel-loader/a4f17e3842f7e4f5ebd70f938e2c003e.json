{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/TaskContainer.js\";\nimport React, { Component } from 'react';\nimport TaskList from './TaskList';\nimport AuthServices from '../services/Services';\nexport default class TaskContainer extends Component {\n  constructor(pro) {\n    super();\n    this.state = {\n      newTaskDescription: \"\",\n      //allTasks: this.props.alltasks,\n      clientID: this.props.clientID\n    };\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {// axios\n    //     .get(\"http://localhost:7000/tasks\")\n    //     .then(allTasks => {\n    //         allTasks = allTasks.data.map(task => {\n    //             return new TaskElement(\n    //                 task._id, task.description, task.timestamp, task.favourited, task.done\n    //             )\n    //         })\n    //         this.setState({\n    //             ...this.state,\n    //             tasks: allTasks\n    //         })\n    //     })\n  }\n\n  toggle(taskID, property) {\n    let chosenTask = this.state.tasks.filter(task => task._id === taskID)[0];\n    chosenTask[property] = !chosenTask[property];\n    console.log(chosenTask); // this.service.toggle()\n    // axios\n    //   .put(`http://localhost:7000/task/${taskID}`, {\n    //     done: chosenTask.done,\n    //     favourited: chosenTask.favourited\n    //   })\n    //   .then(updatedTaskInfo => {\n    //     console.log(updatedTaskInfo);\n    //     this.setState({\n    //       ...this.state\n    //     })\n    //   })\n  }\n\n  updateNewTaskString(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newTaskDescription: e.target.value\n    }));\n  }\n\n  addNewTask(e) {\n    const newTask = this.state.newTaskDescription;\n    const clientID = this.state.clientID; // const infoTitle = this.state.infoTitle\n\n    if (e.key === 'Enter') {\n      this.service.addNewTask(newTask, clientID).then(response => {\n        console.log(response.infoData); // this.setState({\n        //   ...this.state,\n        //   newTaskDescription: \"\",\n        //   allTasks: response,\n        // });\n      }).catch(error => {\n        this.setState({\n          newInfoDescription: newTask,\n          error: true\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new task\",\n      className: \"add-new-task\",\n      value: this.state.newTaskString,\n      onChange: e => this.updateNewTaskString(e),\n      onKeyDown: e => this.addNewTask(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: this.state.tasks,\n      toggleDone: task => this.toggle(task, \"done\"),\n      toggleFavourite: task => this.toggle(task, \"favourited\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/TaskContainer.js"],"names":["React","Component","TaskList","AuthServices","TaskContainer","constructor","pro","state","newTaskDescription","clientID","props","service","componentDidMount","toggle","taskID","property","chosenTask","tasks","filter","task","_id","console","log","updateNewTaskString","e","setState","target","value","addNewTask","newTask","key","then","response","infoData","catch","error","newInfoDescription","render","newTaskString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TaskList from './TaskList';\nimport AuthServices from '../services/Services';\n\n\nexport default class TaskContainer extends Component {\n  constructor(pro) {\n    super();\n    this.state = {\n      newTaskDescription: \"\",\n      //allTasks: this.props.alltasks,\n      clientID: this.props.clientID,\n    }\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {\n    // axios\n    //     .get(\"http://localhost:7000/tasks\")\n    //     .then(allTasks => {\n    //         allTasks = allTasks.data.map(task => {\n    //             return new TaskElement(\n    //                 task._id, task.description, task.timestamp, task.favourited, task.done\n    //             )\n    //         })\n\n    //         this.setState({\n    //             ...this.state,\n    //             tasks: allTasks\n    //         })\n    //     })\n  }\n\n  toggle(taskID, property) {\n    let chosenTask = this.state.tasks.filter(task => task._id === taskID)[0]\n    chosenTask[property] = !chosenTask[property]\n    console.log(chosenTask)\n    // this.service.toggle()\n    // axios\n    //   .put(`http://localhost:7000/task/${taskID}`, {\n    //     done: chosenTask.done,\n    //     favourited: chosenTask.favourited\n    //   })\n    //   .then(updatedTaskInfo => {\n    //     console.log(updatedTaskInfo);\n\n    //     this.setState({\n    //       ...this.state\n    //     })\n    //   })\n  }\n\n  updateNewTaskString(e) {\n    this.setState({\n      ...this.state,\n      newTaskDescription: e.target.value\n    })\n  }\n\n  addNewTask(e) {\n    const newTask = this.state.newTaskDescription\n    const clientID = this.state.clientID\n    // const infoTitle = this.state.infoTitle\n    if (e.key === 'Enter') {\n      this.service.addNewTask(newTask, clientID)\n        .then(response => {\n          console.log(response.infoData)\n          // this.setState({\n          //   ...this.state,\n          //   newTaskDescription: \"\",\n          //   allTasks: response,\n          // });\n        })\n        .catch(error => {\n          this.setState({\n            newInfoDescription: newTask,\n            error: true\n          });\n        })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"task-collection\">\n        <input type=\"text\"\n          placeholder=\"Add a new task\"\n          className=\"add-new-task\"\n          value={this.state.newTaskString}\n          onChange={(e) => this.updateNewTaskString(e)}\n          onKeyDown={(e) => this.addNewTask(e)} />\n        <TaskList tasks={this.state.tasks}\n          toggleDone={(task) => this.toggle(task, \"done\")}\n          toggleFavourite={(task) => this.toggle(task, \"favourited\")}\n        >\n        </TaskList>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}