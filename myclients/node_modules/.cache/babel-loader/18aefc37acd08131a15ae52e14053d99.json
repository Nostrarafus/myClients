{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js\";\nimport React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: [],\n      clientData: {}\n    };\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {\n    this.getLooks();\n    this.setState(_objectSpread({}, this.state, {\n      clientData: this.props.clientData\n    }));\n  }\n\n  getLooks() {\n    const clientID = this.props.clientData;\n    console.log(clientID);\n    this.service.getLooks(clientID).then(allLooks => {\n      console.log(allLooks); // if(allLooks !== undefined){\n      // allLooks = allLooks.data.map(look => {\n      //   return new LookElement(\n      //     look._id, look.description, look.timestamp,\n      //   )\n      // })\n      // this.setState({\n      //   ...this.state,\n      //   allLooks: allLooks\n      // })}\n    });\n  }\n\n  updateNewLookDescription(e) {\n    this.setState(_objectSpread({}, this.state, {\n      newLookDescription: e.target.value\n    }));\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription;\n    const clientID = this.props.clientData._id;\n    console.log(clientID);\n\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID).then(createdLook => {\n        let looksClonedArray = [...this.state.allLooks];\n        createdLook = createdLook.data;\n        looksClonedArray.unshift(new LookElement(createdLook._id, createdLook.description, createdLook.timestamp));\n        this.setState(_objectSpread({}, this.state, {\n          looks: looksClonedArray,\n          newLookDescription: \"\"\n        }));\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props.clientData);\n    return React.createElement(\"section\", {\n      className: \"task-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a new Look\",\n      className: \"add-new-look\",\n      value: this.state.newLookDescription,\n      onChange: e => this.updateNewLookDescription(e),\n      onKeyDown: e => this.addNewLook(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(LookList, {\n      Looks: this.state.allLooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/LookContainer.js"],"names":["React","Component","AuthServices","LookList","LookElement","LookContainer","constructor","props","state","newLookDescription","newLookPic","allLooks","clientData","service","componentDidMount","getLooks","setState","clientID","console","log","then","updateNewLookDescription","e","target","value","addNewLook","newLook","_id","key","createdLook","looksClonedArray","data","unshift","description","timestamp","looks","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\nimport LookElement from './LookElement';\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookPic: \"\",\n      allLooks: [],\n      clientData:{}\n    }\n    this.service = new AuthServices();\n  }\n  componentDidMount() {\n    this.getLooks()\n     this.setState({\n          ...this.state,\n          clientData: this.props.clientData\n        })\n  }\n\n  getLooks() {\n    const clientID = this.props.clientData\n    console.log(clientID)\n    this.service.getLooks(clientID)\n      .then(allLooks => {\n        console.log(allLooks)\n        // if(allLooks !== undefined){\n        // allLooks = allLooks.data.map(look => {\n        //   return new LookElement(\n        //     look._id, look.description, look.timestamp,\n        //   )\n        // })\n        // this.setState({\n        //   ...this.state,\n        //   allLooks: allLooks\n        // })}\n      })\n  }\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook(e) {\n    const newLook = this.state.newLookDescription\n    const clientID = this.props.clientData._id\n    console.log(clientID)\n    if (e.key === 'Enter') {\n      this.service.addNewLook(newLook, clientID)\n        .then(createdLook => {\n          let looksClonedArray = [...this.state.allLooks]\n          createdLook = createdLook.data\n          looksClonedArray.unshift(\n            new LookElement(createdLook._id, createdLook.description, createdLook.timestamp)\n          )\n\n          this.setState({\n            ...this.state,\n            looks: looksClonedArray,\n            newLookDescription: \"\"\n          })\n        })\n    }\n  }\n\n  render() {\n    console.log(this.props.clientData)\n    return (\n      <section className=\"task-collection\">\n        <input type=\"text\"\n          placeholder=\"Add a new Look\"\n          className=\"add-new-look\"\n          value={this.state.newLookDescription}\n          onChange={(e) => this.updateNewLookDescription(e)}\n          onKeyDown={(e) => this.addNewLook(e)} />\n\n        <LookList Looks={this.state.allLooks} />\n\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}