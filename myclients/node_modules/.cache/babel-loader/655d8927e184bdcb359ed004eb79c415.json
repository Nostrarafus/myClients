{"ast":null,"code":"import _objectSpread from \"/Users/rafael/Ironhack/week8/myClients/myclients/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/rafael/Ironhack/week8/myClients/myclients/src/components/Client.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthServices from '../services/Services';\nimport LookContainer from './LookContainer';\nimport InfoContainer from './InfoContainer';\nimport TaskContainer from './TaskContainer';\nimport ZoomImg from './ZoomImg';\nexport default class Client extends Component {\n  constructor() {\n    super();\n\n    this.getSingleClient = () => {\n      const params = this.props.match.params;\n      const clientID = params.id;\n      this.service.getSingleClient(clientID).then(response => {\n        // console.log(response)\n        this.setState(_objectSpread({}, this.state, {\n          clientData: response\n        }));\n      });\n    };\n\n    this.state = {\n      clientData: null,\n      file: null\n    };\n    this.service = new AuthServices();\n  }\n\n  componentDidMount() {\n    this.getSingleClient();\n  }\n\n  addNewInfoBox() {\n    let infoTitle;\n    let popUp = prompt(\"Please name the new info box\", \"Favourite movies\");\n\n    if (popUp === null || popUp === \"\") {\n      infoTitle = undefined;\n    } else {\n      infoTitle = popUp;\n    }\n\n    const params = this.props.match.params;\n    const clientID = params.id;\n    console.log(clientID);\n    console.log(infoTitle);\n    this.service.addNewInfoBox(infoTitle, clientID).then(response => {\n      console.log(response);\n      this.setState(_objectSpread({}, this.state, {\n        clientData: response\n      }));\n    });\n  }\n\n  handlePhotoSubmit(e) {\n    e.preventDefault();\n    const clientID = this.state.clientData._id;\n    this.service.addClientPicture(this.state.file, clientID).then(response => {\n      console.log(response);\n      this.setState(_objectSpread({}, this.state, {\n        file: null,\n        clientData: response\n      }));\n    });\n  }\n\n  handlePhotoChange(e) {\n    // console.log(\"archivos seleccionado\")\n    // console.log(e.target.files[0])\n    this.setState(_objectSpread({}, this.state, {\n      file: e.target.files[0]\n    }));\n  }\n\n  render() {\n    console.log(this.state.clientData);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/profile',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Volver al perfil\")), this.state.clientData ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Cliente \", this.state.clientData.clientName)) : null, this.state.clientData ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handlePhotoSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: e => this.handlePhotoChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Update your \", this.state.clientData.clientName, \" pic\")), React.createElement(\"div\", {\n      className: \"clientPic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.clientData.picture ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(ZoomImg, {\n      src: this.state.clientData.picture.imgPath,\n      alt: this.state.clientData.picture.imgName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })) : \"\")) : null, React.createElement(\"div\", {\n      className: \"looksInClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.clientData ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(LookContainer, {\n      clientID: this.state.clientData._id,\n      looksData: this.state.clientData.looks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      className: \"infosInClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.clientData ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.clientData.infos.map((info, idx) => {\n      return React.createElement(InfoContainer, {\n        key: idx,\n        clientID: this.state.clientData._id,\n        infoData: info.infoData,\n        infoTitle: info.infoTitle,\n        infoID: info._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    }), React.createElement(\"button\", {\n      onClick: () => this.addNewInfoBox(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Add a new Infobox for your client\")) : null), React.createElement(\"div\", {\n      className: \"taskContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.clientData ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(TaskContainer, {\n      taskData: this.state.clientData.tasks,\n      clientID: this.state.clientData._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/rafael/Ironhack/week8/myClients/myclients/src/components/Client.js"],"names":["React","Component","Link","AuthServices","LookContainer","InfoContainer","TaskContainer","ZoomImg","Client","constructor","getSingleClient","params","props","match","clientID","id","service","then","response","setState","state","clientData","file","componentDidMount","addNewInfoBox","infoTitle","popUp","prompt","undefined","console","log","handlePhotoSubmit","e","preventDefault","_id","addClientPicture","handlePhotoChange","target","files","render","clientName","picture","imgPath","imgName","looks","infos","map","info","idx","infoData","tasks"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport AuthServices from '../services/Services'\nimport LookContainer from './LookContainer';\nimport InfoContainer from './InfoContainer';\nimport TaskContainer from './TaskContainer';\nimport ZoomImg from './ZoomImg';\n\nexport default class Client extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clientData: null,\n      file: null\n    }\n    this.service = new AuthServices()\n  }\n\n\n  componentDidMount() {\n    this.getSingleClient();\n  }\n\n  getSingleClient = () => {\n    const { params } = this.props.match;\n    const clientID = params.id\n    this.service.getSingleClient(clientID)\n      .then(response => {\n        // console.log(response)\n        this.setState({\n          ...this.state,\n          clientData: response\n        });\n      })\n  }\n\n  addNewInfoBox() {\n    let infoTitle\n    let popUp = prompt(\"Please name the new info box\", \"Favourite movies\")\n    if (popUp === null || popUp === \"\") {\n      infoTitle = undefined;\n    } else {\n      infoTitle = popUp;\n    }\n    const { params } = this.props.match;\n    const clientID = params.id\n    console.log(clientID)\n    console.log(infoTitle)\n    this.service.addNewInfoBox(infoTitle, clientID)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          ...this.state,\n          clientData: response\n        });\n      })\n  }\n\n\n  handlePhotoSubmit(e) {\n    e.preventDefault()\n    const clientID = this.state.clientData._id\n    this.service.addClientPicture(this.state.file,clientID)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          ...this.state,\n          file: null,\n          clientData: response,\n        });\n      })\n  }\n\n\n  handlePhotoChange(e) {\n    // console.log(\"archivos seleccionado\")\n    // console.log(e.target.files[0])\n    this.setState({\n      ...this.state,\n      file: e.target.files[0]\n    })\n  }\n\n\n\n  render() {\n    console.log(this.state.clientData)\n    return (\n      <div>\n        <h3><Link to={'/profile'}>Volver al perfil</Link></h3>\n\n        {\n          (this.state.clientData)\n            ?\n            <React.Fragment>\n              <h1>Cliente {this.state.clientData.clientName}</h1>\n            </React.Fragment>\n            : null\n        }\n        {\n          (this.state.clientData)\n            ?\n            <React.Fragment>\n              <form onSubmit={(e) => this.handlePhotoSubmit(e)}>\n                <input type=\"file\" onChange={(e) => this.handlePhotoChange(e)} /> <br />\n                <button type=\"submit\">Update your {this.state.clientData.clientName} pic</button>\n              </form>\n              <div className=\"clientPic\">\n                {(this.state.clientData.picture) ?\n                  <React.Fragment>\n                    <ZoomImg src={this.state.clientData.picture.imgPath} alt={this.state.clientData.picture.imgName} />\n                  </React.Fragment>\n                  : \"\"}\n              </div>\n            </React.Fragment>\n            : null\n        }\n\n        <div className=\"looksInClient\">\n          {\n            (this.state.clientData)\n              ?\n              <React.Fragment>\n                <LookContainer\n                  clientID={this.state.clientData._id}\n                  looksData={this.state.clientData.looks}>\n                </LookContainer>\n              </React.Fragment>\n              : null\n          }\n        </div>\n        <div className=\"infosInClient\">\n          {\n            (this.state.clientData)\n              ?\n              <React.Fragment>\n                {\n                  this.state.clientData.infos.map((info, idx) => {\n                    return (\n                      <InfoContainer\n                        key={idx}\n                        clientID={this.state.clientData._id}\n                        infoData={info.infoData}\n                        infoTitle={info.infoTitle}\n                        infoID={info._id} />\n                    )\n                  })\n                }\n\n                <button onClick={() => this.addNewInfoBox()}>Add a new Infobox for your client</button>\n              </React.Fragment>\n\n              : null\n          }\n        </div>\n        <div className=\"taskContainer\">\n          {\n            (this.state.clientData)\n              ?\n              <React.Fragment>\n                <TaskContainer\n                  taskData={this.state.clientData.tasks}\n                  clientID={this.state.clientData._id}\n                />\n\n              </React.Fragment>\n              : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}