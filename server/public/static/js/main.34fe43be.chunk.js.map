{"version":3,"sources":["services/Services.js","components/ClientView.js","components/ZoomImg.js","components/Profile.js","components/Signup.js","components/Login.js","components/Home.js","components/LookSingle.js","components/LookList.js","components/LookContainer.js","components/InfoSingle.js","components/InfoList.js","components/InfoContainer.js","components/Client.js","App.js","serviceWorker.js","index.js"],"names":["errHandler","err","console","error","response","data","message","AuthServices","_this","this","Object","classCallCheck","signup","username","password","service","post","then","catch","login","loggedin","get","logout","addClient","clientName","showAllClients","addUserPicture","file","formData","FormData","append","headers","Content-Type","getUserData","getSingleClient","clientID","addNewLook","newLook","log","concat","addNewInfo","newInfo","infoTitle","axios","create","baseURL","process","withCredentials","Clientview","state","id","props","identificador","react_default","a","createElement","Fragment","nombre","Component","transition","duration","ease","Frame","posed","div","zoomedIn","applyAtStart","display","opacity","zoomedOut","applyAtEnd","Image","img","position","top","left","bottom","right","width","height","flip","ZoomImg","isZoomed","zoomOut","window","removeEventListener","setState","addEventListener","_this2","_this$props","imageWidth","imageHeight","objectWithoutProperties","pose","className","onClick","zoomIn","style","assign","React","Profile","possibleConstructorReturn","getPrototypeOf","call","userData","objectSpread","handleFormSubmit","event","preventDefault","allClients","clients","handleClientChange","_event$target","target","name","value","defineProperty","userPhoto","e","files","_this3","onSubmit","type","onChange","map","client","idx","key","react_router_dom","to","_id","ClientView_Clientview","handlePhotoSubmit","handlePhotoChange","picture","components_ZoomImg","src","imgPath","alt","imgName","Signup","handleChange","Login","getUser","Home","LookSingle","timeStamp","moment","created_at","format","lookDescription","LookList","looks","look","LookSingle_LookSingle","LookContainer","newLookDescription","lookPic","newLookFile","createdLook","looksClonedArray","toConsumableArray","looksData","unshift","encType","placeholder","updateNewLookDescription","LookList_LookList","infoID","infoData","InfoList","info","InfoSingle_LookSingle","InfoContainer","newInfoDescription","createdInfo","infosClonedArray","updateNewInfoDescription","onKeyDown","InfoList_InfoList","Client","match","params","clientData","sendCorrectInfo","setTimeout","LookContainer_LookContainer","infos","InfoContainer_InfoContainer","App","fetchUser","loggedInUser","getTheUser","userObj","history","push","react_router","exact","path","render","Profile_Profile","component","Home_Home","Signup_Signup","components_Login","withRouter","Boolean","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iRAEMA,EAAa,SAAAC,GAEjB,GADAC,QAAQC,MAAMF,GACVA,EAAIG,UAAYH,EAAIG,SAASC,KAE/B,MADAH,QAAQC,MAAM,eAAgBF,EAAIG,SAASC,MACrCJ,EAAIG,SAASC,KAAKC,QAE1B,MAAML,GAIaM,EACnB,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAOdG,OAAS,SAACC,EAAUC,GAClB,OAAON,EAAKO,QAAQC,KAAK,eAAgB,CAAEH,WAAUC,aAClDG,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IAVGS,KAadU,MAAQ,SAACN,EAAUC,GACjB,OAAON,EAAKO,QAAQC,KAAK,cAAe,CAAEH,WAAUC,aACjDG,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IAhBGS,KAmBdW,SAAW,WACT,OAAOZ,EAAKO,QAAQM,IAAI,kBACrBJ,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IAtBGS,KAyBda,OAAS,WACP,OAAOd,EAAKO,QAAQM,IAAI,gBACrBJ,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IA5BGS,KA+Bdc,UAAY,SAACC,GACX,OAAOhB,EAAKO,QAAQC,KAAK,aAAc,CAAEQ,eACtCP,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IAlCGS,KAqCdgB,eAAiB,WACf,OAAOjB,EAAKO,QAAQM,IAAI,eACrBJ,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IAxCGS,KA2CdiB,eAAiB,SAACC,GAChB,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBnB,EAAKO,QAAQC,KAAK,iBAAkBY,EAAU,CACnDG,QAAS,CACPC,eAAgB,yBAGjBf,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IApDGS,KAuDdwB,YAAc,WACZ,OAAOzB,EAAKO,QAAQM,IAAI,SACrBJ,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IA1DGS,KA6DdyB,gBAAkB,SAACC,GACjB,OAAO3B,EAAKO,QAAQC,KAAb,cAAiC,CAACmB,aACtClB,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IAhEGS,KAmEd2B,WAAa,SAACC,EAASF,EAAUR,GAC/BzB,QAAQoC,IAAID,EAASF,GACrB,IAAMP,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GACzBC,EAASE,OAAO,UAAWO,GACpB7B,EAAKO,QAAQC,KAAb,WAAAuB,OAA6BJ,EAA7B,eAAoDP,GACxDX,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IA1EGS,KA6Ed+B,WAAa,SAACC,EAASN,EAAUO,GAC/B,OAAOlC,EAAKO,QAAQC,KAAb,WAAAuB,OAA6BJ,EAA7B,eAAoD,CAAEM,UAASC,cACnEzB,KAAK,SAAAb,GAAQ,OAAIA,EAASC,OAC1Ba,MAAMlB,IA/ETS,KAAKM,QAAU4B,IAAMC,OAAO,CAC1BC,QAASC,oCACTC,iBAAiB,KCdFC,6MACnBC,MAAO,CACHC,GAAI1C,EAAK2C,MAAMC,uFAKjB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,qBAAa9C,KAAK0C,MAAMM,gBATQC,oCCClCC,EAAa,CACjBC,SAAU,IACVC,KAAM,CAAC,IAAM,IAAM,GAAK,MAGpBC,EAAQC,IAAMC,IAAI,CACtBC,SAAU,CACRC,aAAc,CAAEC,QAAS,SACzBC,QAAS,GAEXC,UAAW,CACTC,WAAY,CAAEH,QAAS,QACvBC,QAAS,KAIPG,EAAQR,IAAMS,IAAI,CACtBP,SAAU,CACRQ,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,MAAM,EACNrB,WAAYA,GAEdU,UAAW,CACTI,SAAU,SACVK,MAAO,IACPC,OAAQ,IACRC,MAAM,EACNrB,WAAYA,KAmCDsB,6MA9BbhC,MAAQ,CAAEiC,UAAU,KAOpBC,QAAU,WACRC,OAAOC,oBAAoB,SAAU7E,EAAK2E,SAC1C3E,EAAK8E,SAAS,CAAEJ,UAAU,6EAN1BE,OAAOG,iBAAiB,SAAU9E,KAAK0E,SACvC1E,KAAK6E,SAAS,CAAEJ,UAAU,qCAQnB,IAAAM,EAAA/E,KAAAgF,EACuChF,KAAK0C,MAA3CuC,EADDD,EACCC,WAAYC,EADbF,EACaE,YAAgBxC,EAD7BzC,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,8BAGDI,EADepF,KAAKwC,MAAlBiC,SACgB,WAAa,YAErC,OACE7B,EAAAC,EAAAC,cAAA,OACEuC,UAAU,cACVC,QAAS,kBAAOP,EAAKvC,MAAMiC,SAAWM,EAAKL,UAAYK,EAAKQ,UAC5DC,MAAO,CAAEnB,MAAOY,EAAYX,OAAQY,IAEpCtC,EAAAC,EAAAC,cAACO,EAAD,CAAO+B,KAAMA,EAAMC,UAAU,UAC7BzC,EAAAC,EAAAC,cAACgB,EAAD7D,OAAAwF,OAAA,CAAOJ,UAAU,YAAYD,KAAMA,GAAU1C,YAzB/BgD,IAAMzC,WCjCP0C,cACnB,SAAAA,EAAYjD,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA2F,IACjB5F,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAA0F,GAAAG,KAAA9F,KAAM0C,KA0BRlB,YAAc,WACZzB,EAAKO,QAAQkB,cACZhB,KAAK,SAAAuF,GACJhG,EAAK8E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKF,EAAKyC,MADV,CAEEuD,SAAUA,QAhCGhG,EAqCnBkG,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAMpF,EAAahB,EAAKyC,MAAM1B,UAE9Bf,EAAKO,QAAQQ,UAAUC,GACpBP,KAAK,SAAAb,GAEJI,EAAK8E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKF,EAAKyC,MADV,CAEE1B,UAAW,GACXsF,WAAYzG,EAAS0G,aAGxB5F,MAAM,SAAAf,GACLK,EAAK8E,SAAS,CACZ/D,UAAWC,EACXrB,OAAO,OArDIK,EA0DnBuG,mBAAqB,SAACJ,GAAU,IAAAK,EACNL,EAAMM,OAAtBC,EADsBF,EACtBE,KAAMC,EADgBH,EAChBG,MACd3G,EAAK8E,SAAL5E,OAAA0G,EAAA,EAAA1G,CAAA,GAAiBwG,EAAOC,KA1DxB3G,EAAKyC,MAAQ,CACX1B,UAAW,GACXsF,WAAY,GACZQ,UAAW,GACX1F,KAAM,KACN6E,SAAU,IAEZhG,EAAKO,QAAU,IAAIR,EATFC,mFAaC,IAAAgF,EAAA/E,KAClBA,KAAKM,QAAQU,iBACVR,KAAK,SAAA4F,GACJrB,EAAKF,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACK8E,EAAKvC,MADV,CAEE4D,WAAYA,oDAMpBpG,KAAKwB,wDAuCaqF,GAChBA,EAAEV,iBACFnG,KAAKM,QAAQW,eAAejB,KAAKwC,MAAMtB,MACvClB,KAAKwB,wDAIWqF,GAIhB7G,KAAK6E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKD,KAAKwC,MADV,CAEEtB,KAAM2F,EAAEL,OAAOM,MAAM,uCAIhB,IAAAC,EAAA/G,KAGP,OACE4C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQwC,QAAStF,KAAK0C,MAAM7B,QAA5B,UACA+B,EAAAC,EAAAC,cAAA,wBAAgB9C,KAAKwC,MAAMuD,SAAS3F,UACpCwC,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,QAAMkE,SAAUhH,KAAKiG,kBACnBrD,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOR,KAAK,YAAYC,MAAO1G,KAAKwC,MAAM1B,UAAWoG,SAAU,SAACL,GAAD,OAAOE,EAAKT,mBAAmBO,MAC1GjE,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,SAASP,MAAM,aAAapB,QAAStF,KAAKgB,kBAExD4B,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,eAEXrF,KAAKwC,MAAM4D,WAAWe,IAAI,SAACC,EAAQC,GACjC,OAAOzE,EAAAC,EAAAC,cAAA,OAAKwE,IAAKD,GACfzE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,WAAaJ,EAAOK,KAC5B7E,EAAAC,EAAAC,cAAC4E,EAAD,CAAY1E,OAAQoE,EAAOrG,WAAY4B,cAAeyE,EAAOK,WAOvE7E,EAAAC,EAAAC,cAAA,QAAMkE,SAAU,SAACH,GAAD,OAAOE,EAAKY,kBAAkBd,KAC5CjE,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOC,SAAU,SAACL,GAAD,OAAOE,EAAKa,kBAAkBf,MAD7D,IACoEjE,EAAAC,EAAAC,cAAA,WAClEF,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,UAAb,4BAEFrE,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,WACXrF,KAAKwC,MAAMuD,SAAS8B,QAAWjF,EAAAC,EAAAC,cAACgF,EAAD,CAASC,IAAK/H,KAAKwC,MAAMuD,SAAS8B,QAAQ,GAAGG,QAASC,IAAKjI,KAAKwC,MAAMuD,SAAS8B,QAAQ,GAAGK,UAAc,YA9G9GjF,aCHhBkF,cACnB,SAAAA,EAAYzF,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAmI,IACjBpI,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAkI,GAAArC,KAAA9F,KAAM0C,KAQRuD,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAM/F,EAAWL,EAAKyC,MAAMpC,SACtBC,EAAWN,EAAKyC,MAAMnC,SAE5BN,EAAKO,QAAQH,OAAOC,EAAUC,GAC3BG,KAAK,SAAAb,GACJI,EAAK8E,SAAS,CACZzE,SAAU,GACVC,SAAU,OAIbI,MAAM,SAAAf,GACLK,EAAK8E,SAAS,CACZzE,SAAUA,EACVC,SAAUA,EACVX,OAAO,OA1BIK,EA+BnBqI,aAAe,SAAClC,GAAU,IAAAK,EACAL,EAAMM,OAAtBC,EADgBF,EAChBE,KAAMC,EADUH,EACVG,MACd3G,EAAK8E,SAAL5E,OAAA0G,EAAA,EAAA1G,CAAA,GAAiBwG,EAAOC,KA/BxB3G,EAAKyC,MAAQ,CACXpC,SAAU,GACTC,SAAU,IAEbN,EAAKO,QAAU,IAAIR,EANFC,wEAoCV,IAAAgF,EAAA/E,KACP,OACE4C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMkE,SAAUhH,KAAKiG,kBACnBrD,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOR,KAAK,WAAWC,MAAO1G,KAAKwC,MAAMpC,SAAU8G,SAAU,SAAAL,GAAC,OAAI9B,EAAKqD,aAAavB,MAEhGjE,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,WAAWR,KAAK,WAAWC,MAAO1G,KAAKwC,MAAMnC,SAAU6G,SAAU,SAAAL,GAAC,OAAI9B,EAAKqD,aAAavB,MAEpGjE,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,SAASP,MAAM,YAG7B9D,EAAAC,EAAAC,cAAA,iCACEF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,UAAV,mBAnD0BvE,aC2CrBoF,cA1Cb,SAAAA,EAAY3F,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAqI,IACjBtI,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAoI,GAAAvC,KAAA9F,KAAM0C,KAKRuD,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAM/F,EAAWL,EAAKyC,MAAMpC,SACtBC,EAAWN,EAAKyC,MAAMnC,SAC5BN,EAAKO,QAAQI,MAAMN,EAAUC,GAC1BG,KAAK,SAAAb,GACJI,EAAK8E,SAAS,CAAEzE,SAAU,GAAIC,SAAU,KACxCN,EAAK2C,MAAM4F,QAAQ3I,KAEpBc,MAAM,SAAAf,GAAK,OAAID,QAAQoC,IAAInC,MAfbK,EAkBnBqI,aAAe,SAAClC,GAAU,IAAAK,EACAL,EAAMM,OAAtBC,EADgBF,EAChBE,KAAMC,EADUH,EACVG,MACd3G,EAAK8E,SAAL5E,OAAA0G,EAAA,EAAA1G,CAAA,GAAiBwG,EAAOC,KAlBxB3G,EAAKyC,MAAQ,CAAEpC,SAAU,GAAIC,SAAU,IACvCN,EAAKO,QAAU,IAAIR,EAHFC,wEAuBV,IAAAgF,EAAA/E,KACP,OACE4C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMkE,SAAUhH,KAAKiG,kBACnBrD,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOR,KAAK,WAAWC,MAAO1G,KAAKwC,MAAMpC,SAAU8G,SAAU,SAAAL,GAAC,OAAI9B,EAAKqD,aAAavB,MAChGjE,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,WAAWR,KAAK,WAAWC,MAAO1G,KAAKwC,MAAMnC,SAAU6G,SAAU,SAAAL,GAAC,OAAI9B,EAAKqD,aAAavB,MAEpGjE,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,SAASP,MAAM,WAE7B9D,EAAAC,EAAAC,cAAA,+BACIF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,WAAV,oBApCQvE,aCDCsF,mLAEjB,OACE3F,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,QACbzC,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,WAAf,KAA2BzC,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMlC,UAAU,OAAOmC,GAAI,UAA3B,IAAsC5E,EAAAC,EAAAC,cAAA,mBAAtC,OAC3BF,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,YAAf,IAA2BzC,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMlC,UAAU,OAAOmC,GAAI,WAA3B,IAAuC5E,EAAAC,EAAAC,cAAA,oBAAvC,eANDG,sCCGbuF,cACnB,SAAAA,IAAc,IAAAzI,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAwI,IACZzI,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAuI,GAAA1C,KAAA9F,QACKwC,MAAM,CACTiG,UAAW,MAHD1I,mFAQZC,KAAK6E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKD,KAAKwC,MADV,CAEEiG,UAAWC,IAAO1I,KAAK0C,MAAMiG,YAAYC,OAAO,iEAKlD,OACEhG,EAAAC,EAAAC,cAAA,MAAIuC,UAAU,cACZzC,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,gCACbzC,EAAAC,EAAAC,cAACgF,EAAD,CAASC,IAAK/H,KAAK0C,MAAMmF,UACzBjF,EAAAC,EAAAC,cAAA,yBAAiB9C,KAAK0C,MAAMmG,iBAC5BjG,EAAAC,EAAAC,cAAA,QAAMuC,UAAU,aAAarF,KAAKwC,MAAMiG,oBArBVxF,aCHnB6F,mLAEjB,OACElG,EAAAC,EAAAC,cAAA,MAAIuC,UAAU,aAEVrF,KAAK0C,MAAMqG,MAAM5B,IAAI,SAAA6B,GAAI,OACvBpG,EAAAC,EAAAC,cAACmG,EAADhJ,OAAAwF,OAAA,CACE6B,IAAK0B,EAAKvB,KACNuB,cARoB/F,aCIjBiG,cACnB,SAAAA,EAAYxG,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAkJ,IACjBnJ,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAiJ,GAAApD,KAAA9F,KAAM0C,KAkBRf,WAAa,SAACkF,GACZA,EAAEV,iBACF,IAAMvE,EAAU7B,EAAKyC,MAAM2G,mBACrBzH,EAAW3B,EAAKyC,MAAMd,SACtB0H,EAAUrJ,EAAKyC,MAAM6G,YAE3BtJ,EAAKO,QAAQqB,WAAWC,EAASF,EAAU0H,GACxC5I,KAAK,SAAA8I,GACJ7J,QAAQoC,IAAIyH,GACZ,IAAIC,EAAgBtJ,OAAAuJ,EAAA,EAAAvJ,CAAOF,EAAKyC,MAAMiH,WACtCF,EAAiBG,QACfJ,GAGFvJ,EAAK8E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKF,EAAKyC,MADV,CAEEiH,UAAWF,EACXJ,mBAAoB,GACpBE,YAAa,WAnCnBtJ,EAAKyC,MAAQ,CACX2G,mBAAoB,GACpBE,YAAa,KACbI,UAAW1J,EAAK2C,MAAM+G,UACtB/H,SAAU3B,EAAK2C,MAAMhB,UAEvB3B,EAAKO,QAAU,IAAIR,EARFC,wFAYM8G,GACvB7G,KAAK6E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKD,KAAKwC,MADV,CAEE2G,mBAAoBtC,EAAEL,OAAOE,mDA8BfG,GAChB7G,KAAK6E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKD,KAAKwC,MADV,CAEE6G,YAAaxC,EAAEL,OAAOM,MAAM,uCAIvB,IAAA/B,EAAA/E,KAEP,OACE4C,EAAAC,EAAAC,cAAA,WAASuC,UAAU,mBACjBzC,EAAAC,EAAAC,cAAA,QAAMkE,SAAUhH,KAAK2B,WAAYgI,QAAQ,uBACvC/G,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OACV2C,YAAY,6BACZvE,UAAU,eACVqB,MAAO1G,KAAKwC,MAAM2G,mBAClBjC,SAAU,SAACL,GAAD,OAAO9B,EAAK8E,yBAAyBhD,MAGjDjE,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAO2C,YAAY,oBAAoB1C,SAAU,SAACL,GAAD,OAAO9B,EAAK6C,kBAAkBf,MAR7F,IAQoGjE,EAAAC,EAAAC,cAAA,WAElGF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,SAASP,MAAM,wBAG3B1G,KAAKwC,MAAMiH,UACX7G,EAAAC,EAAAC,cAACgH,EAAD,CAAUf,MAAO/I,KAAKwC,MAAMiH,YAC1B,aAxE+BxG,aCJtBuF,cACnB,SAAAA,EAAY9F,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAwI,IACjBzI,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAuI,GAAA1C,KAAA9F,KAAM0C,KACDF,MAAQ,CACXiG,UAAW,KACXsB,OAAQhK,EAAK2C,MAAMqH,QAJJhK,mFASjBC,KAAK6E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKD,KAAKwC,MADV,CAEEiG,UAAWC,IAAO1I,KAAK0C,MAAMiG,YAAYC,OAAO,iEAMlD,OACEhG,EAAAC,EAAAC,cAAA,MAAIuC,UAAU,cACZzC,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,4BACXrF,KAAK0C,MACLE,EAAAC,EAAAC,cAAA,SAAI9C,KAAK0C,MAAMsH,UACb,cAvB0B/G,aCAnBgH,mLACV,IAAAlK,EAAAC,KAEP,OACE4C,EAAAC,EAAAC,cAAA,MAAIuC,UAAU,cAETrF,KAAK0C,MACN1C,KAAK0C,MAAMsH,SAAS7C,IAAI,SAAC+C,EAAM7C,GAAP,OACtBzE,EAAAC,EAAAC,cAACqH,EAAD,CACE7C,IAAKD,EACL2C,SAAUE,EACVH,OAAQhK,EAAK2C,MAAMqH,WAItB,aAf2B9G,aCEjBmH,cACnB,SAAAA,EAAY1H,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAoK,IACjBrK,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAmK,GAAAtE,KAAA9F,KAAM0C,KACDF,MAAQ,CACX6H,mBAAoB,GACpBL,SAAUjK,EAAK2C,MAAMsH,SACrBtI,SAAU3B,EAAK2C,MAAMhB,SACrBO,UAAWlC,EAAK2C,MAAMT,UACtB8H,OAAQhK,EAAK2C,MAAMqH,QAErBhK,EAAKO,QAAU,IAAIR,EATFC,0EA2BR8G,GAAG,IAAA9B,EAAA/E,KACNgC,EAAUhC,KAAKwC,MAAM6H,mBACrB3I,EAAW1B,KAAKwC,MAAMd,SACtBO,EAAYjC,KAAKwC,MAAMP,UACf,UAAV4E,EAAES,KACJtH,KAAKM,QAAQyB,WAAWC,EAASN,EAAUO,GACxCzB,KAAK,SAAA8J,GAEJ,IAAIC,EAAgBtK,OAAAuJ,EAAA,EAAAvJ,CAAO8E,EAAKvC,MAAMwH,UACtCO,EAAiBb,QAAQY,GACzBvF,EAAKF,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACK8E,EAAKvC,MADV,CAEEuG,MAAOwB,EACPF,mBAAoB,yDAOLxD,GACvB7G,KAAK6E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKD,KAAKwC,MADV,CAEE6H,mBAAoBxD,EAAEL,OAAOE,0CAKxB,IAAAK,EAAA/G,KACP,OACE4C,EAAAC,EAAAC,cAAA,WAASuC,UAAU,mBAEjBzC,EAAAC,EAAAC,cAAA,UAAK9C,KAAKwC,MAAMP,WAChBW,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OACV2C,YAAY,6BACZvE,UAAU,eACVqB,MAAO1G,KAAKwC,MAAM6H,mBAClBnD,SAAU,SAACL,GAAD,OAAOE,EAAKyD,yBAAyB3D,IAC/C4D,UAAW,SAAC5D,GAAD,OAAOE,EAAKhF,WAAW8E,MAGlC7G,KAAKwC,MAAMwH,SACXpH,EAAAC,EAAAC,cAAC4H,EAAD,CAAUV,SAAUhK,KAAKwC,MAAMwH,SAAUD,OAAQ/J,KAAKwC,MAAMuH,SAC1D,aAvE+B9G,aCCtB0H,cACnB,SAAAA,IAAc,IAAA5K,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA2K,IACZ5K,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAA0K,GAAA7E,KAAA9F,QAeFyB,gBAAkB,WAAM,IAEhBC,EADa3B,EAAK2C,MAAMkI,MAAtBC,OACgBpI,GACxB1C,EAAKO,QAAQmB,gBAAgBC,GAC1BlB,KAAK,SAAAb,GACJF,QAAQoC,IAAIlC,GACZI,EAAK8E,SAAL5E,OAAA+F,EAAA,EAAA/F,CAAA,GACKF,EAAKyC,MADV,CAEEsI,WAAYnL,OAGfc,MAAM,SAACjB,GACNC,QAAQoC,IAAIrC,MA5BJO,EAgCdgL,gBAAkB,WAChBtL,QAAQoC,IAAI9B,EAAKyC,MAAMsI,aA/BvB/K,EAAKyC,MAAQ,CACXsI,WAAY,MAEd/K,EAAKO,QAAU,IAAIR,EALPC,mFASM,IAAAgF,EAAA/E,KAClBA,KAAKyB,kBACLuJ,WAAW,WACTjG,EAAKgG,mBACJ,sCAwBI,IAAAhE,EAAA/G,KAEP,OADAP,QAAQoC,IAAI7B,KAAKwC,MAAMsI,YAErBlI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAMC,GAAI,YAAV,qBAEDxH,KAAKwC,MAAMsI,WAEVlI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,qCAA6B9C,KAAKwC,MAAMsI,WAAW/J,aAEnD,KAGN6B,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,iBAEVrF,KAAKwC,MAAMsI,WAEVlI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACmI,EAAD,CACEvJ,SAAU1B,KAAKwC,MAAMsI,WAAWrD,IAChCgC,UAAWzJ,KAAKwC,MAAMsI,WAAW/B,SAGnC,MAGRnG,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,iBAEVrF,KAAKwC,MAAMsI,WAEVlI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAEI/C,KAAKwC,MAAMsI,WAAWI,MAAM/D,IAAI,SAAA+C,GAC9B,OACEtH,EAAAC,EAAAC,cAACqI,EAAD,CACE7D,IAAK4C,EAAKzC,IACV/F,SAAUqF,EAAKvE,MAAMsI,WAAWrD,IAChCuC,SAAUE,EAAKF,SACf/H,UAAWiI,EAAKjI,UAChB8H,OAAQG,EAAKzC,SAMrB,cApFoBxE,aCI9BmI,cACJ,SAAAA,EAAY1I,GAAO,IAAA3C,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAoL,IACjBrL,EAAAE,OAAA2F,EAAA,EAAA3F,CAAAD,KAAAC,OAAA4F,EAAA,EAAA5F,CAAAmL,GAAAtF,KAAA9F,KAAM0C,KAOR2I,UAAY,WACsB,OAA5BtL,EAAKyC,MAAM8I,cAEbvL,EAAKO,QAAQK,WACVH,KAAK,SAAAb,GACJI,EAAK8E,SAAS,CACZyG,aAAc3L,MAGjBc,MAAM,SAAAjB,GACLO,EAAK8E,SAAS,CACZyG,cAAc,OAnBLvL,EAyBnBwL,WAAa,SAACC,GACZzL,EAAK8E,SAAS,CACZyG,aAAcE,KA3BCzL,EA+BnBc,OAAS,WACPd,EAAKO,QAAQO,SACVL,KAAK,WACJT,EAAK8E,SAAS,CAAEyG,aAAc,OAC9BvL,EAAK2C,MAAM+I,QAAQC,KAAK,QAhC5B3L,EAAKyC,MAAQ,CAAE8I,aAAc,MAC7BvL,EAAKO,QAAU,IAAIR,EAJFC,mFAwCjBC,KAAKqL,6CAGE,IAAAtG,EAAA/E,KACP,OAAIA,KAAKwC,MAAM8I,aAEX1I,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KACE/I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAAQ,OAAOlJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAUnE,GAAG,gBAC1D5E,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,WAAQ,OAAOlJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAUnE,GAAG,gBAC/D5E,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAMlJ,EAAAC,EAAAC,cAACiJ,EAAD9L,OAAAwF,OAAA,GAAaV,EAAKvC,MAAM8I,aAAxB,CAAsCzK,OAAQkE,EAAKlE,aAC9F+B,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcG,UAAWrB,MAM/C/H,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KACE/I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMlJ,EAAAC,EAAAC,cAACmJ,EAAD,SACpCrJ,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAMlJ,EAAAC,EAAAC,cAACoJ,EAAD,CAAQ5D,QAASvD,EAAKwG,gBAChE3I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAMlJ,EAAAC,EAAAC,cAACqJ,EAAD,CAAO7D,QAASvD,EAAKwG,yBA9DxDtI,aAwEHmJ,cAAWhB,GCtENiB,QACW,cAA7B1H,OAAO2H,SAASC,UAEe,UAA7B5H,OAAO2H,SAASC,UAEhB5H,OAAO2H,SAASC,SAAS3B,MACvB,2DCZN4B,IAASV,OAAOlJ,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KAAQ3E,EAAAC,EAAAC,cAAC2J,EAAD,OAAkBC,SAASC,eAAe,SD2H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtM,KAAK,SAAAuM,GACjCA,EAAaC","file":"static/js/main.34fe43be.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst errHandler = err => {\n  console.error(err);\n  if (err.response && err.response.data) {\n    console.error(\"API response\", err.response.data);\n    throw err.response.data.message\n  }\n  throw err;\n}\n\n\nexport default class AuthServices {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_URL,\n      withCredentials: true\n    })\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/auth/signup', { username, password })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  login = (username, password) => {\n    return this.service.post('/auth/login', { username, password })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  loggedin = () => {\n    return this.service.get('/auth/loggedin')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  logout = () => {\n    return this.service.get('/auth/logout')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addClient = (clientName) => {\n    return this.service.post('/addClient', { clientName })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  showAllClients = () => {\n    return this.service.get('/allClients')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addUserPicture = (file) => {\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    return this.service.post('/users/Userpic', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  getUserData = () => {\n    return this.service.get('/user')\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  getSingleClient = (clientID) => {\n    return this.service.post(`/clientData`, {clientID})\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewLook = (newLook, clientID, file) => {\n    console.log(newLook, clientID)\n    const formData = new FormData();\n    formData.append(\"photo\", file)\n    formData.append(\"newLook\", newLook)\n    return this.service.post(`/client/${clientID}/addNewLook`, formData)\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n  addNewInfo = (newInfo, clientID, infoTitle) => {\n    return this.service.post(`/client/${clientID}/addNewInfo`, { newInfo, infoTitle })\n      .then(response => response.data)\n      .catch(errHandler);\n  }\n\n\n}\n\n\n  // getLooks = (clientID) => {\n  //   return this.service.get(`/client/${clientID}/allLooks`)\n  //     .then(response => response.data)\n  //     .catch(errHandler);\n  // }","import React, { Component } from 'react'\n\nexport default class Clientview extends Component {\n  state= {\n      id: this.props.identificador\n    }\n  \n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Cliente:{this.props.nombre}</h1>\n      </React.Fragment>\n    )\n  }\n}\n","import React from \"react\";\nimport posed from \"react-pose\";\n\nconst transition = {\n  duration: 400,\n  ease: [0.08, 0.69, 0.2, 0.99]\n};\n\nconst Frame = posed.div({\n  zoomedIn: {\n    applyAtStart: { display: \"block\" },\n    opacity: 1\n  },\n  zoomedOut: {\n    applyAtEnd: { display: \"none\" },\n    opacity: 0\n  }\n});\n\nconst Image = posed.img({\n  zoomedIn: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: 600,\n    height: 600,\n    flip: true,\n    transition: transition\n  },\n  zoomedOut: {\n    position: \"static\",\n    width: 200,\n    height: 200,\n    flip: true,\n    transition: transition\n  }\n});\n\nclass ZoomImg extends React.Component {\n  state = { isZoomed: false };\n\n  zoomIn() {\n    window.addEventListener(\"scroll\", this.zoomOut);\n    this.setState({ isZoomed: true });\n  }\n\n  zoomOut = () => {\n    window.removeEventListener('scroll', this.zoomOut);\n    this.setState({ isZoomed: false });\n  };\n\n  render() {\n    const { imageWidth, imageHeight, ...props } = this.props;\n    const { isZoomed } = this.state;\n    const pose = isZoomed ? \"zoomedIn\" : \"zoomedOut\";\n\n    return (\n      <div\n        className=\"image-frame\"\n        onClick={() => (this.state.isZoomed ? this.zoomOut() : this.zoomIn())}\n        style={{ width: imageWidth, height: imageHeight }}\n      >\n        <Frame pose={pose} className=\"frame\" />\n        <Image className=\"ZoomImage\" pose={pose} {...props} />\n      </div>\n    );\n  }\n}\n\nexport default ZoomImg;\n","import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport Clientview from './ClientView';\nimport { Link } from 'react-router-dom';\nimport ZoomImg from './ZoomImg'\n\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      addClient: \"\",\n      allClients: [],\n      userPhoto: {},\n      file: null,\n      userData: {},\n    }\n    this.service = new AuthServices();\n\n  }\n\n  componentDidMount() {\n    this.service.showAllClients()\n      .then(allClients => {\n        this.setState({\n          ...this.state,\n          allClients: allClients\n        });\n      })\n  }\n\n  componentWillMount() {\n  this.getUserData()\n  }\n\n  getUserData = () =>{\n    this.service.getUserData()\n    .then(userData => {\n      this.setState({\n        ...this.state,\n        userData: userData\n      })\n    })\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const clientName = this.state.addClient;\n\n    this.service.addClient(clientName)\n      .then(response => {\n       // console.log(response)\n        this.setState({\n          ...this.state,\n          addClient: \"\",\n          allClients: response.clients,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          addClient: clientName,\n          error: true\n        });\n      })\n  }\n\n  handleClientChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handlePhotoSubmit(e) {\n    e.preventDefault()\n    this.service.addUserPicture(this.state.file)\n    this.getUserData()\n  }\n\n\n  handlePhotoChange(e) {\n    // console.log(\"archivos seleccionado\")\n    // console.log(e.target.files[0])\n\n    this.setState({\n      ...this.state,\n      file: e.target.files[0]\n    })\n  }\n\n  render() {\n    //console.log(this.state.userData)\n   //3 console.log(this.state.allClients)  \n    return (\n      <div>\n        <button onClick={this.props.logout}>Logout</button>\n        <h1>Bienvenido {this.state.userData.username}</h1>\n        <h2>Add a new client:</h2>\n        <form onSubmit={this.handleFormSubmit}>\n          <input type=\"text\" name=\"addClient\" value={this.state.addClient} onChange={(e) => this.handleClientChange(e)} />\n          <input type=\"submit\" value=\"Add Client\" onClick={this.showAllClients} />\n        </form>\n        <div className=\"clientsList\">\n          {\n            this.state.allClients.map((client, idx) => {\n              return <div key={idx}>\n                <Link to={`/client/` + client._id}>\n                  <Clientview nombre={client.clientName} identificador={client._id} />\n                </Link>\n              </div>\n            })\n          }\n        </div>\n\n        <form onSubmit={(e) => this.handlePhotoSubmit(e)}>\n          <input type=\"file\" onChange={(e) => this.handlePhotoChange(e)} /> <br />\n          <button type=\"submit\">Update your profile pic</button>\n        </form>\n        <div className=\"userPic\">\n          {(this.state.userData.picture) ? <ZoomImg src={this.state.userData.picture[0].imgPath} alt={this.state.userData.picture[0].imgName} /> : \"\"}\n        </div>\n\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthServices from '../services/Services'\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      username: '',\n       password: ''\n      };\n    this.service = new AuthServices();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        // this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n\n        <p>Already have account?\n          <Link to={\"/login\"}> Login</Link>\n        </p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AuthServices from '../services/Services';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthServices();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account?\n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <h1>Welcome to myClients app</h1>\n        <div className=\"logLink\">  <Link className=\"link\" to={'/login'}> <h1>Login</h1>  </Link></div>\n        <div className=\"signLink\"> <Link className=\"link\" to={'/signup'}> <h1>Signup</h1>  </Link></div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport ZoomImg from './ZoomImg';\nimport moment from \"moment\";\n\n\n\nexport default class LookSingle extends Component {\n  constructor() {\n    super()\n    this.state={\n      timeStamp: null\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      timeStamp: moment(this.props.created_at).format(\"dddd, MMMM Do YYYY, H:mm \")\n    })\n  }\n\n  render() {\n    return (\n      <li className=\"singleLook\">\n        <div className=\"img-description-time-wrapper\">\n          <ZoomImg src={this.props.picture} />\n          <p>Description: {this.props.lookDescription}</p>\n          <span className=\"timestamp\">{this.state.timeStamp}</span>\n        </div>\n      </li>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport LookSingle from './LookSingle';\n\nexport default class LookList extends Component {\n  render() {\n    return (\n      <ol className=\"Look-list\">\n        {\n          this.props.looks.map(look =>\n            <LookSingle\n              key={look._id}\n              {...look}\n            >\n            </LookSingle>\n          )\n        }\n      </ol>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport AuthServices from '../services/Services';\nimport LookList from './LookList';\n\n\n\n\nexport default class LookContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newLookDescription: \"\",\n      newLookFile: null,\n      looksData: this.props.looksData,\n      clientID: this.props.clientID,\n    }\n    this.service = new AuthServices();\n   // console.log(this.state.looksData)\n  }\n\n  updateNewLookDescription(e) {\n    this.setState({\n      ...this.state,\n      newLookDescription: e.target.value\n    })\n  }\n\n  addNewLook = (e) => {\n    e.preventDefault();\n    const newLook = this.state.newLookDescription\n    const clientID = this.state.clientID\n    const lookPic = this.state.newLookFile\n\n    this.service.addNewLook(newLook, clientID, lookPic)\n      .then(createdLook => {\n        console.log(createdLook)\n        let looksClonedArray = [...this.state.looksData]\n        looksClonedArray.unshift(\n          createdLook\n        )\n\n        this.setState({\n          ...this.state,\n          looksData: looksClonedArray,\n          newLookDescription: \"\",\n          newLookFile: null\n        })\n      })\n  }\n\n\n\n\n  handlePhotoChange(e) {\n    this.setState({\n      ...this.state,\n      newLookFile: e.target.files[0]\n    })\n  }\n\n  render() {\n   //console.log(this.state.looksData)\n    return (\n      <section className=\"task-collection\">\n        <form onSubmit={this.addNewLook} encType=\"multipart/form-data\">\n          <input type=\"text\"\n            placeholder=\"Add a new Look description\"\n            className=\"add-new-look\"\n            value={this.state.newLookDescription}\n            onChange={(e) => this.updateNewLookDescription(e)}\n          />\n\n          <input type=\"file\" placeholder=\"add your look pic\" onChange={(e) => this.handlePhotoChange(e)} /> <br />\n\n          <input type=\"submit\" value=\"add your cool look\" />\n        </form>\n\n        {(this.state.looksData) ?\n          <LookList looks={this.state.looksData} />\n          : null\n        }\n\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport moment from \"moment\";\n\nexport default class LookSingle extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      timeStamp: null,\n      infoID: this.props.infoID,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state,\n      timeStamp: moment(this.props.created_at).format(\"dddd, MMMM Do YYYY, H:mm \")\n    })\n  }\n\n  render() {\n     //console.log(this.props)\n    return (\n      <li className=\"singleInfo\">\n        <div className=\"description-time-wrapper\">\n          {(this.props) ?\n            <p>{this.props.infoData}</p>\n            : null}\n          {/* <span className=\"timestamp\">{this.state.timeStamp}</span> */}\n        </div>\n      </li>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport InfoSingle from './InfoSingle';\n\nexport default class InfoList extends Component {\n  render() {\n   // console.log(this.props.infoID)\n    return (\n      <ol className=\"infos-list\">\n        {\n          (this.props)?\n          this.props.infoData.map((info, idx) =>\n            <InfoSingle\n              key={idx}\n              infoData={info}\n              infoID={this.props.infoID}\n            >\n            </InfoSingle>\n          )\n          :null\n        }\n      </ol>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport InfoList from './InfoList';\nimport AuthServices from '../services/Services';\n\n\nexport default class InfoContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newInfoDescription: \"\",\n      infoData: this.props.infoData,\n      clientID: this.props.clientID,\n      infoTitle: this.props.infoTitle,\n      infoID: this.props.infoID,\n    }\n    this.service = new AuthServices();\n\n    //  console.log(this.state)\n  }\n\n\n  // getInfos() {\n  //   const clientID = this.state.clientID\n  //   this.service.getLooks(clientID)\n  //     .then(allInfo => {\n  //       console.log(allInfo)\n  //         this.setState({\n  //           ...this.state,\n  //           infoData: allInfo\n  //         })\n  //       })\n  // }\n\n  addNewInfo(e) {\n    const newInfo = this.state.newInfoDescription\n    const clientID = this.state.clientID\n    const infoTitle = this.state.infoTitle\n    if (e.key === 'Enter') {\n      this.service.addNewInfo(newInfo, clientID, infoTitle)\n        .then(createdInfo => {\n          // console.log(createdInfo)\n          let infosClonedArray = [...this.state.infoData]\n          infosClonedArray.unshift(createdInfo)\n          this.setState({\n            ...this.state,\n            looks: infosClonedArray,\n            newInfoDescription: \"\"\n          })\n        })\n    }\n  }\n\n\n  updateNewInfoDescription(e) {\n    this.setState({\n      ...this.state,\n      newInfoDescription: e.target.value\n    })\n  }\n\n\n  render() {\n    return (\n      <section className=\"info-collection\">\n\n        <h1>{this.state.infoTitle}</h1>\n        <input type=\"text\"\n          placeholder=\"Add a new Info description\"\n          className=\"add-new-info\"\n          value={this.state.newInfoDescription}\n          onChange={(e) => this.updateNewInfoDescription(e)}\n          onKeyDown={(e) => this.addNewInfo(e)}\n        />\n\n        {(this.state.infoData) ?\n          <InfoList infoData={this.state.infoData} infoID={this.state.infoID} />\n          : null\n        }\n\n\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport AuthServices from '../services/Services'\nimport LookContainer from './LookContainer';\nimport InfoContainer from './InfoContainer';\n\nexport default class Client extends Component {\n  constructor() {\n    super()\n    this.state = {\n      clientData: null,\n    }\n    this.service = new AuthServices()\n  }\n\n\n  componentDidMount() {\n    this.getSingleClient();\n    setTimeout(() => {\n      this.sendCorrectInfo();\n    }, 200);\n  }\n\n  getSingleClient = () => {\n    const { params } = this.props.match;\n    const clientID = params.id\n    this.service.getSingleClient(clientID)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          ...this.state,\n          clientData: response\n        });\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  sendCorrectInfo = () => {\n    console.log(this.state.clientData)\n\n  }\n\n  render() {\n    console.log(this.state.clientData)\n    return (\n      <div>\n        <h3><Link to={'/profile'}>Volver al perfil</Link></h3>\n        {\n          (this.state.clientData)\n            ?\n            <React.Fragment>\n              <h1>Aqui esta el perfil de: {this.state.clientData.clientName}</h1>\n            </React.Fragment>\n            : null\n        }\n\n        <div className=\"looksInClient\">\n          {\n            (this.state.clientData)\n              ?\n              <React.Fragment>\n                <LookContainer\n                  clientID={this.state.clientData._id}\n                  looksData={this.state.clientData.looks}>\n                </LookContainer>\n              </React.Fragment>\n              : null\n          }\n        </div>\n        <div className=\"infosInClient\">\n          {\n            (this.state.clientData)\n              ?\n              <React.Fragment>\n                {\n                  this.state.clientData.infos.map(info => {\n                    return (\n                      <InfoContainer\n                        key={info._id}\n                        clientID={this.state.clientData._id}\n                        infoData={info.infoData}\n                        infoTitle={info.infoTitle}\n                        infoID={info._id} />\n                    )\n                  })\n                }\n              </React.Fragment>\n\n              : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport './sass/main.scss';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport AuthServices from './services/Services';\nimport Home from './components/Home';\nimport Client from './components/Client';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthServices();\n  }\n\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      //utilizamos el método loggedin para cualquier momento que deseemos obtener la información del usuario quede guardada en el state de app\n      this.service.loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          })\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          })\n        })\n    }\n  }\n\n  getTheUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    this.service.logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n        this.props.history.push('/')\n      })\n  }\n\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/' render={() => { return <Redirect to=\"/profile\" /> }} />\n            <Route exact path='/login' render={() => { return <Redirect to=\"/profile\" /> }} />\n            <Route exact path='/profile' render={() => <Profile {...this.state.loggedInUser} logout={this.logout} />} />\n            <Route exact path='/client/:id' component={Client} />\n          </Switch>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/' render={() => <Home />} />\n            <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser} />} />\n            <Route exact path='/login' render={() => <Login getUser={this.getTheUser} />} />\n            {/* <Route render={() => { return <Redirect to=\"/login\" /> }} /> */}\n          </Switch>\n\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}